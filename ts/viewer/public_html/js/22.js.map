{"version":3,"file":"22.js","mappings":"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","sources":["webpack://monofy/./src/elements/ContextMenu.ts","webpack://monofy/./src/viewer.ts"],"sourcesContent":["export class ContextMenu {\r\n  private readonly domElement: HTMLElement;\r\n  private readonly _submenus: ContextMenu[] = [];\r\n\r\n  constructor(\r\n    private readonly container?: HTMLElement,\r\n    private readonly attachedElement?: HTMLElement\r\n  ) {\r\n    this.domElement = document.createElement(\"div\");\r\n    this.domElement.classList.add(\"context-menu\");\r\n\r\n    if (container) container.appendChild(this.domElement);\r\n\r\n    if (attachedElement) {\r\n      this.hide();\r\n      attachedElement.addEventListener(\"contextmenu\", (event) => {\r\n        event.preventDefault();\r\n        this.show(event.clientX + 10, event.clientY - 5);\r\n      });\r\n    }\r\n  }\r\n\r\n  public isVisible() {\r\n    return this.domElement.style.display !== \"none\";\r\n  }\r\n\r\n  public addItem(label: string, callback: () => void) {\r\n    const item = document.createElement(\"div\");\r\n    item.classList.add(\"context-menu-item\");\r\n    item.textContent = label;\r\n    item.addEventListener(\"click\", () => {\r\n      callback();\r\n      this.hide();\r\n    });\r\n    this.domElement.appendChild(item);\r\n  }\r\n\r\n  public addSubmenu(label: string, submenu: ContextMenu) {\r\n    const item = document.createElement(\"div\");\r\n    item.classList.add(\"context-menu-item\");\r\n    item.textContent = label;\r\n    item.addEventListener(\"click\", (e) => {\r\n      submenu.show(\r\n        this.domElement.offsetLeft + this.domElement.offsetWidth - 5,\r\n        item.offsetTop\r\n      );\r\n      const elt = e.target as HTMLElement;\r\n      if (elt.classList.contains(\"context-menu-item\")) {\r\n        this.hide();\r\n      }\r\n    });\r\n\r\n    submenu.domElement.classList.add(\"context-menu-submenu\");\r\n    this._submenus.push(submenu);\r\n\r\n    item.appendChild(submenu.domElement);\r\n    this.domElement.appendChild(item);\r\n  }\r\n\r\n  public show(x: number, y: number) {\r\n    if (!this.container) return;\r\n    this.domElement.style.left = `${x}px`;\r\n    this.domElement.style.top = `${y}px`;\r\n    this.domElement.style.display = \"block\";\r\n  }\r\n\r\n  public hide() {\r\n    if (!this.isVisible() || !this.container) return;\r\n    this.domElement.style.display = \"none\";\r\n    for (let i = 0; i < this._submenus.length; i++) {\r\n      this._submenus[i].hide();\r\n    }\r\n  }\r\n}\r\n","import { ArcRotateCamera } from \"@babylonjs/core/Cameras/arcRotateCamera\";\r\nimport { Engine } from \"@babylonjs/core/Engines/engine\";\r\nimport { HemisphericLight } from \"@babylonjs/core/Lights/hemisphericLight\";\r\nimport { Texture } from \"@babylonjs/core/Materials/Textures/texture\";\r\nimport { StandardMaterial } from \"@babylonjs/core/Materials/standardMaterial\";\r\nimport { Color3, Color4 } from \"@babylonjs/core/Maths/math.color\";\r\nimport { PointLight } from \"@babylonjs/core/Lights/pointLight\";\r\nimport { Vector3 } from \"@babylonjs/core/Maths/math.vector\";\r\nimport { Mesh } from \"@babylonjs/core/Meshes/mesh\";\r\nimport { MeshBuilder } from \"@babylonjs/core/Meshes/meshBuilder\";\r\nimport { Scene } from \"@babylonjs/core/scene\";\r\nimport { PointerEventTypes } from \"@babylonjs/core/Events/pointerEvents\";\r\nimport { Nullable } from \"@babylonjs/core/types\";\r\nimport { AbstractMesh } from \"@babylonjs/core/Meshes/abstractMesh\";\r\nimport { GizmoManager } from \"@babylonjs/core/Gizmos/gizmoManager\";\r\nimport { PositionGizmo } from \"@babylonjs/core/Gizmos/positionGizmo\";\r\nimport { RotationGizmo } from \"@babylonjs/core/Gizmos/rotationGizmo\";\r\nimport \"@babylonjs/core/Helpers/sceneHelpers\";\r\nimport { ScaleGizmo } from \"@babylonjs/core/Gizmos/scaleGizmo\";\r\nimport { BoundingBoxGizmo } from \"@babylonjs/core/Gizmos/boundingBoxGizmo\";\r\nimport { GroundMesh } from \"@babylonjs/core/Meshes/groundMesh\";\r\nimport { ContextMenu } from \"./elements/ContextMenu\";\r\n//import { Inspector } from \"@babylonjs/inspector\";\r\n\r\nconst win = window as any;\r\n\r\nexport class Viewer {\r\n  private readonly _canvas: HTMLCanvasElement;\r\n  private readonly _engine: Engine;\r\n  private readonly _scene: Scene;\r\n  private readonly _camera: ArcRotateCamera;\r\n  private readonly _cursor: Mesh;\r\n  private readonly _defaultMaterial;\r\n  private readonly _contextMenu: ContextMenu;\r\n  private _selectedMesh: Nullable<AbstractMesh> = null;\r\n  public readonly gizmoManager: GizmoManager;\r\n  public readonly cursorPosition: Vector3 = Vector3.Zero();\r\n\r\n  ground: GroundMesh;\r\n\r\n  constructor(canvasElement?: HTMLCanvasElement) {\r\n    if (canvasElement === undefined) {\r\n      this._canvas = document.createElement(\"canvas\");\r\n      document.body.appendChild(this._canvas);\r\n    } else {\r\n      this._canvas = canvasElement;\r\n    }\r\n\r\n    this._canvas.width = win.innerWidth;\r\n    this._canvas.height = win.innerHeight;\r\n    win.addEventListener(\"resize\", () => {\r\n      this._canvas.width = win.innerWidth;\r\n      this._canvas.height = win.innerHeight;\r\n    });\r\n\r\n    this._contextMenu = new ContextMenu(document.body, this._canvas);\r\n    const primitiveMenu = new ContextMenu();\r\n\r\n    primitiveMenu.addItem(\"Box\", () => {\r\n      this.addPrimitive(\r\n        \"box\",\r\n        this.cursorPosition,\r\n        Vector3.Zero(),\r\n        new Vector3(1, 1, 1)\r\n      );\r\n    });\r\n    primitiveMenu.addItem(\"Sphere\", () => {\r\n      this.addPrimitive(\r\n        \"sphere\",\r\n        this.cursorPosition,\r\n        Vector3.Zero(),\r\n        new Vector3(1, 1, 1)\r\n      );\r\n    });\r\n    primitiveMenu.addItem(\"Cylinder\", () => {\r\n      this.addPrimitive(\r\n        \"cylinder\",\r\n        this.cursorPosition,\r\n        Vector3.Zero(),\r\n        new Vector3(1, 1, 1)\r\n      );\r\n    });\r\n    primitiveMenu.addItem(\"Torus\", () => {\r\n      this.addPrimitive(\r\n        \"torus\",\r\n        this.cursorPosition,\r\n        Vector3.Zero(),\r\n        new Vector3(1, 1, 1)\r\n      );\r\n    });\r\n\r\n    this._contextMenu.addSubmenu(\"Add Primitive\", primitiveMenu);\r\n\r\n    this._engine = new Engine(this._canvas, true);\r\n    this._scene = new Scene(this._engine);\r\n    // Inspector.Show(this._scene, {\r\n    //   enableClose: false,\r\n    //   enablePopup: false,\r\n    //   overlay: true,\r\n    // });\r\n    this._cursor = MeshBuilder.CreateSphere(\r\n      \"cursor\",\r\n      { diameter: 0.1, segments: 16 },\r\n      this._scene\r\n    );\r\n\r\n    const cursorMaterial = new StandardMaterial(\"cursorMaterial\", this._scene);\r\n    cursorMaterial.diffuseColor = new Color3(0, 1, 0); // Green color\r\n    cursorMaterial.specularColor = new Color3(0, 0, 0); // No shininess\r\n    this._cursor.material = cursorMaterial;\r\n    this._cursor.material.alpha = 0.5;\r\n    this._cursor.isVisible = false;\r\n\r\n    this._defaultMaterial = new StandardMaterial(\r\n      \"defaultMaterial\",\r\n      this._scene\r\n    );\r\n    this._defaultMaterial.diffuseColor = new Color3(0.8, 0.8, 0.8); // Off white color\r\n    this._defaultMaterial.specularColor = new Color3(0, 0, 0); // No shininess\r\n    this._camera = new ArcRotateCamera(\r\n      \"camera\",\r\n      Math.PI / 2,\r\n      Math.PI / 2,\r\n      10,\r\n      new Vector3(0, 1.65, 0),\r\n      this._scene\r\n    );\r\n    this._camera.attachControl(this._canvas, true);\r\n\r\n    const light = new HemisphericLight(\r\n      \"light\",\r\n      new Vector3(0, 1, 0),\r\n      this._scene\r\n    );\r\n    light.intensity = 0.7;\r\n\r\n    const pointLight = new PointLight(\r\n      \"pointLight\",\r\n      new Vector3(0, 10, 0),\r\n      this._scene\r\n    );\r\n    pointLight.intensity = 0.7;\r\n\r\n    this.gizmoManager = this._createGizmos();\r\n    this.ground = this._createGround();\r\n\r\n    this._engine.runRenderLoop(() => {\r\n      this._scene.render();\r\n    });\r\n  }\r\n\r\n  public get domElement() {\r\n    return this._canvas;\r\n  }\r\n\r\n  private _createGround(width: number = 10, height: number = 10): GroundMesh {\r\n    if (this.ground) {\r\n      this.ground.dispose();\r\n    }\r\n\r\n    const ground = MeshBuilder.CreateGround(\r\n      \"ground\",\r\n      { width, height },\r\n      this._scene\r\n    );\r\n    ground.material = this._defaultMaterial;\r\n\r\n    return ground;\r\n  }\r\n\r\n  private _createGizmos(): GizmoManager {\r\n    if (this.gizmoManager) {\r\n      throw new Error(\"Gizmo manager already created\");\r\n    }\r\n\r\n    win.addEventListener(\"keydown\", (event: KeyboardEvent) => {\r\n      if (event.key === \"Delete\") {\r\n        if (this._selectedMesh) {\r\n          gizmoManager.attachToMesh(null);\r\n          this._selectedMesh.dispose();\r\n        }\r\n      } else if (event.key === \"e\" && this._selectedMesh !== this._cursor) {\r\n        if (this._selectedMesh) {\r\n          gizmoManager.rotationGizmoEnabled = true;\r\n          gizmoManager.positionGizmoEnabled = false;\r\n          gizmoManager.scaleGizmoEnabled = false;\r\n          gizmoManager.boundingBoxGizmoEnabled = false;\r\n        }\r\n      } else if (event.key === \"w\") {\r\n        if (this._selectedMesh) {\r\n          gizmoManager.positionGizmoEnabled = true;\r\n          gizmoManager.rotationGizmoEnabled = false;\r\n          gizmoManager.scaleGizmoEnabled = false;\r\n          gizmoManager.boundingBoxGizmoEnabled = false;\r\n        }\r\n      } else if (event.key === \"q\" && this._selectedMesh !== this._cursor) {\r\n        if (this._selectedMesh) {\r\n          gizmoManager.positionGizmoEnabled = true;\r\n          gizmoManager.rotationGizmoEnabled = true;\r\n          gizmoManager.boundingBoxGizmoEnabled = true;\r\n          gizmoManager.scaleGizmoEnabled = false;\r\n        }\r\n      } else if (event.key === \"s\" && this._selectedMesh !== this._cursor) {\r\n        if (this._selectedMesh) {\r\n          gizmoManager.positionGizmoEnabled = false;\r\n          gizmoManager.rotationGizmoEnabled = false;\r\n          gizmoManager.scaleGizmoEnabled = true;\r\n          gizmoManager.boundingBoxGizmoEnabled = false;\r\n        }\r\n      } else if (event.key === \"r\" && this._selectedMesh !== this._cursor) {\r\n        if (this._selectedMesh) {\r\n          gizmoManager.boundingBoxGizmoEnabled = true;\r\n          gizmoManager.positionGizmoEnabled = false;\r\n          gizmoManager.rotationGizmoEnabled = false;\r\n          gizmoManager.scaleGizmoEnabled = false;\r\n        }\r\n      } else if (event.key === \"c\") {\r\n        this._placeCursor();\r\n      } else if (event.key == \"Escape\") {\r\n        if (this._contextMenu.isVisible()) {\r\n          this._contextMenu.hide();\r\n        } else {\r\n          this.deselectAll();\r\n        }\r\n      }\r\n    });\r\n\r\n    this._scene.onPointerObservable.add((eventData) => {\r\n      if (eventData.event.button === 2) {\r\n        if (this._selectedMesh !== this._cursor) {\r\n          this._placeCursor();\r\n        }\r\n        return;\r\n      }\r\n\r\n      if (eventData.event.button !== 0) {\r\n        return;\r\n      }\r\n\r\n      if (eventData.type === PointerEventTypes.POINTERDOUBLETAP) {\r\n        if (eventData.pickInfo?.hit && eventData.pickInfo.pickedMesh) {\r\n          this.selectObject(eventData.pickInfo.pickedMesh);\r\n        } else {\r\n          this.deselectAll();\r\n        }\r\n      } else if (eventData.type === PointerEventTypes.POINTERDOWN) {\r\n        if (eventData.pickInfo?.hit && eventData.pickInfo.pickedMesh) {\r\n          if (eventData.pickInfo.pickedMesh !== this._selectedMesh) {\r\n            this.deselectAll();\r\n          }\r\n        } else {\r\n          this.deselectAll();\r\n        }\r\n      }\r\n    });\r\n\r\n    const gizmoManager = new GizmoManager(this._scene);\r\n    gizmoManager.usePointerToAttachGizmos = false;\r\n    gizmoManager.gizmos.positionGizmo = new PositionGizmo();\r\n    gizmoManager.gizmos.rotationGizmo = new RotationGizmo();\r\n    gizmoManager.gizmos.scaleGizmo = new ScaleGizmo();\r\n    gizmoManager.gizmos.boundingBoxGizmo = new BoundingBoxGizmo();\r\n    gizmoManager.positionGizmoEnabled = false;\r\n    gizmoManager.rotationGizmoEnabled = false;\r\n    gizmoManager.scaleGizmoEnabled = false;\r\n    gizmoManager.boundingBoxGizmoEnabled = false;\r\n\r\n    return gizmoManager;\r\n  }\r\n\r\n  private _placeCursor() {\r\n    const pickResult = this._scene.pick(\r\n      this._scene.pointerX,\r\n      this._scene.pointerY\r\n    );\r\n    if (pickResult.hit && pickResult.pickedPoint) {\r\n      this.cursorPosition.copyFrom(pickResult.pickedPoint);\r\n      this._cursor.position.copyFrom(this.cursorPosition);\r\n      this._cursor.isVisible = true;\r\n      this.selectObject(this._cursor);\r\n    }\r\n  }\r\n\r\n  public selectObject(mesh: AbstractMesh) {\r\n    if (mesh !== this._cursor) {\r\n      this._cursor.isVisible = false;\r\n    }\r\n\r\n    if (mesh === this._selectedMesh) {\r\n      return;\r\n    }\r\n\r\n    this._selectedMesh = mesh;\r\n    // this._scene.debugLayer.select(selectedMesh);\r\n\r\n    this.gizmoManager.positionGizmoEnabled = true;\r\n    this.gizmoManager.rotationGizmoEnabled = false;\r\n    this.gizmoManager.scaleGizmoEnabled = false;\r\n    this.gizmoManager.boundingBoxGizmoEnabled = false;\r\n    this.gizmoManager.attachToMesh(this._selectedMesh);\r\n  }\r\n\r\n  public deselectAll(): void {\r\n    this._selectedMesh = null;\r\n    this.gizmoManager.attachToMesh(null);\r\n    this.gizmoManager.positionGizmoEnabled = false;\r\n    this.gizmoManager.rotationGizmoEnabled = false;\r\n    this.gizmoManager.scaleGizmoEnabled = false;\r\n    this.gizmoManager.boundingBoxGizmoEnabled = false;\r\n    this._cursor.isVisible = false;\r\n    this._contextMenu.hide();\r\n  }\r\n\r\n  public addPrimitive(\r\n    type: \"box\" | \"sphere\" | \"cylinder\" | \"torus\",\r\n    position: Vector3,\r\n    rotation: Vector3,\r\n    size: Vector3\r\n  ) {\r\n    let mesh: Mesh;\r\n    switch (type) {\r\n      case \"box\":\r\n        mesh = MeshBuilder.CreateBox(\"box\", { size: 1 }, this._scene);\r\n        break;\r\n      case \"sphere\":\r\n        mesh = MeshBuilder.CreateSphere(\"sphere\", { diameter: 1 }, this._scene);\r\n        break;\r\n      case \"cylinder\":\r\n        mesh = MeshBuilder.CreateCylinder(\r\n          \"cylinder\",\r\n          { diameterTop: 1, diameterBottom: 1, height: 1 },\r\n          this._scene\r\n        );\r\n        break;\r\n      case \"torus\":\r\n        mesh = MeshBuilder.CreateTorus(\r\n          \"torus\",\r\n          { diameter: 1, thickness: 0.5 },\r\n          this._scene\r\n        );\r\n        break;\r\n      default:\r\n        throw new Error(\"Invalid primitive type\");\r\n    }\r\n\r\n    mesh.position.copyFrom(position);\r\n    mesh.rotation.copyFrom(rotation);\r\n    mesh.scaling.copyFrom(size);\r\n    mesh.material = this._defaultMaterial;\r\n\r\n    this.selectObject(mesh);\r\n  }\r\n\r\n  public enableXR() {\r\n    const floor = this._scene.getMeshByName(\"floor\");\r\n    if (!floor) {\r\n      throw new Error(\"Floor not found\");\r\n    }\r\n    this._scene.createDefaultXRExperienceAsync({\r\n      floorMeshes: [floor],\r\n    });\r\n  }\r\n}\r\n"],"names":["container","attachedElement","_submenus","this","domElement","document","createElement","classList","add","appendChild","hide","addEventListener","event","preventDefault","show","clientX","clientY","isVisible","style","display","addItem","label","callback","item","textContent","addSubmenu","submenu","e","offsetLeft","offsetWidth","offsetTop","target","contains","push","x","y","left","top","i","length","win","window","canvasElement","_selectedMesh","cursorPosition","Zero","undefined","_canvas","body","width","innerWidth","height","innerHeight","_contextMenu","ContextMenu","primitiveMenu","addPrimitive","_engine","_scene","_cursor","CreateSphere","diameter","segments","cursorMaterial","diffuseColor","specularColor","material","alpha","_defaultMaterial","_camera","Math","PI","attachControl","intensity","gizmoManager","_createGizmos","ground","_createGround","runRenderLoop","render","dispose","CreateGround","Error","key","attachToMesh","rotationGizmoEnabled","positionGizmoEnabled","scaleGizmoEnabled","boundingBoxGizmoEnabled","_placeCursor","deselectAll","onPointerObservable","eventData","button","type","POINTERDOUBLETAP","pickInfo","hit","pickedMesh","selectObject","POINTERDOWN","usePointerToAttachGizmos","gizmos","positionGizmo","rotationGizmo","scaleGizmo","boundingBoxGizmo","pickResult","pick","pointerX","pointerY","pickedPoint","copyFrom","position","mesh","rotation","size","CreateBox","CreateCylinder","diameterTop","diameterBottom","CreateTorus","thickness","scaling","enableXR","floor","getMeshByName","createDefaultXRExperienceAsync","floorMeshes"],"sourceRoot":""}