{"version":3,"file":"192.js","mappings":"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","sources":["webpack://monofy/./src/elements/ContextMenu.ts","webpack://monofy/./src/elements/PromptPopup.ts","webpack://monofy/./src/viewer.ts"],"sourcesContent":["export class ContextMenu {\r\n  private readonly domElement: HTMLElement;\r\n  private readonly _submenus: ContextMenu[] = [];\r\n\r\n  constructor(\r\n    private readonly container?: HTMLElement,\r\n    private readonly attachedElement?: HTMLElement\r\n  ) {\r\n    this.domElement = document.createElement(\"div\");\r\n    this.domElement.classList.add(\"context-menu\");\r\n\r\n    if (container) container.appendChild(this.domElement);\r\n\r\n    if (attachedElement) {\r\n      this.hide();\r\n      attachedElement.addEventListener(\"contextmenu\", (event) => {\r\n        event.preventDefault();\r\n        this.show(event.clientX + 10, event.clientY - 5);\r\n      });\r\n    }\r\n  }\r\n\r\n  public isVisible() {\r\n    return this.domElement.style.display !== \"none\";\r\n  }\r\n\r\n  public addItem(label: string, callback: () => void) {\r\n    const item = document.createElement(\"div\");\r\n    item.classList.add(\"context-menu-item\");\r\n    item.textContent = label;\r\n    item.addEventListener(\"click\", () => {\r\n      callback();\r\n      this.hide();\r\n    });\r\n    this.domElement.appendChild(item);\r\n  }\r\n\r\n  public addSubmenu(label: string, submenu: ContextMenu) {\r\n    const item = document.createElement(\"div\");\r\n    item.classList.add(\"context-menu-item\");\r\n    item.textContent = label;\r\n    item.addEventListener(\"click\", (e) => {\r\n      submenu.show(\r\n        this.domElement.offsetLeft + this.domElement.offsetWidth - 5,\r\n        item.offsetTop\r\n      );\r\n      const elt = e.target as HTMLElement;\r\n      if (elt.classList.contains(\"context-menu-item\")) {\r\n        this.hide();\r\n      }\r\n    });\r\n\r\n    submenu.domElement.classList.add(\"context-menu-submenu\");\r\n    this._submenus.push(submenu);\r\n\r\n    item.appendChild(submenu.domElement);\r\n    this.domElement.appendChild(item);\r\n  }\r\n\r\n  public show(x: number, y: number) {\r\n    if (!this.container) return;\r\n    this.domElement.style.left = `${x}px`;\r\n    this.domElement.style.top = `${y}px`;\r\n    this.domElement.style.display = \"block\";\r\n  }\r\n\r\n  public hide() {\r\n    if (!this.isVisible() || !this.container) return;\r\n    this.domElement.style.display = \"none\";\r\n    for (let i = 0; i < this._submenus.length; i++) {\r\n      this._submenus[i].hide();\r\n    }\r\n  }\r\n}\r\n","export class PromptPopup {\r\n  public readonly domElement: HTMLElement;\r\n  private readonly _input: HTMLInputElement;\r\n  private readonly _button: HTMLButtonElement;\r\n  private readonly _header: HTMLElement;\r\n  private readonly _text: HTMLParagraphElement;\r\n\r\n  constructor(\r\n    container: HTMLElement,\r\n    private readonly onOk: (value: string) => void\r\n  ) {\r\n    this.domElement = document.createElement(\"div\");\r\n    this.domElement.classList.add(\"prompt-popup\");\r\n    this._header = document.createElement(\"h1\");\r\n    this.domElement.appendChild(this._header);\r\n\r\n    this._text = document.createElement(\"p\");\r\n    this.domElement.appendChild(this._text);\r\n\r\n    this._input = document.createElement(\"input\");\r\n    this._input.classList.add(\"prompt-input\");\r\n    this.domElement.appendChild(this._input);\r\n\r\n    this._input.addEventListener(\"keydown\", (event) => {\r\n      if (event.key === \"Enter\") {\r\n        this.onOk(this.getValue());\r\n        this.hide();\r\n      }\r\n    });\r\n\r\n    this._button = document.createElement(\"button\");\r\n    this._button.classList.add(\"prompt-button\");\r\n    this._button.textContent = \"OK\";\r\n    this._button.addEventListener(\"click\", () => {\r\n      this.onOk(this.getValue());\r\n      this.hide();\r\n    });\r\n    this.domElement.appendChild(this._button);\r\n\r\n    container.appendChild(this.domElement);\r\n\r\n    this.hide();\r\n  }\r\n\r\n  public isVisible() {\r\n    return this.domElement.style.display !== \"none\";\r\n  }\r\n\r\n  public show(\r\n    title: string,\r\n    text: string = \"\",\r\n    position?: { x: number; y: number }\r\n  ) {\r\n    this._header.textContent = title;\r\n    this._text.textContent = text;\r\n    this.domElement.style.display = \"block\";\r\n    if (position) {\r\n      this.domElement.style.left = `${position.x}px`;\r\n      this.domElement.style.top = `${position.y}px`;\r\n    }\r\n    this._input.focus();\r\n  }\r\n\r\n  public hide() {\r\n    this.domElement.style.display = \"none\";\r\n  }\r\n\r\n  public getValue() {\r\n    return this._input.value;\r\n  }\r\n}\r\n","import { ArcRotateCamera } from \"@babylonjs/core/Cameras/arcRotateCamera\";\r\nimport { Engine } from \"@babylonjs/core/Engines/engine\";\r\nimport { HemisphericLight } from \"@babylonjs/core/Lights/hemisphericLight\";\r\nimport { Texture } from \"@babylonjs/core/Materials/Textures/texture\";\r\nimport { StandardMaterial } from \"@babylonjs/core/Materials/standardMaterial\";\r\nimport { Color3, Color4 } from \"@babylonjs/core/Maths/math.color\";\r\nimport { PointLight } from \"@babylonjs/core/Lights/pointLight\";\r\nimport { Vector3 } from \"@babylonjs/core/Maths/math.vector\";\r\nimport { Mesh } from \"@babylonjs/core/Meshes/mesh\";\r\nimport { MeshBuilder } from \"@babylonjs/core/Meshes/meshBuilder\";\r\nimport { Scene } from \"@babylonjs/core/scene\";\r\nimport { PointerEventTypes } from \"@babylonjs/core/Events/pointerEvents\";\r\nimport { Nullable } from \"@babylonjs/core/types\";\r\nimport { AbstractMesh } from \"@babylonjs/core/Meshes/abstractMesh\";\r\nimport { GizmoManager } from \"@babylonjs/core/Gizmos/gizmoManager\";\r\nimport { PositionGizmo } from \"@babylonjs/core/Gizmos/positionGizmo\";\r\nimport { RotationGizmo } from \"@babylonjs/core/Gizmos/rotationGizmo\";\r\nimport \"@babylonjs/core/Helpers/sceneHelpers\";\r\nimport { ScaleGizmo } from \"@babylonjs/core/Gizmos/scaleGizmo\";\r\nimport { BoundingBoxGizmo } from \"@babylonjs/core/Gizmos/boundingBoxGizmo\";\r\nimport { GroundMesh } from \"@babylonjs/core/Meshes/groundMesh\";\r\nimport { SceneLoader } from \"@babylonjs/core/Loading/sceneLoader\";\r\nimport { ContextMenu } from \"./elements/ContextMenu\";\r\nimport { PromptPopup } from \"./elements/PromptPopup\";\r\nimport { Txt2ModelShapERequest } from \"./api\";\r\n//import { Inspector } from \"@babylonjs/inspector\";\r\nimport \"@babylonjs/loaders/glTF\";\r\n\r\nconst win = window as any;\r\n\r\nexport class Viewer {\r\n  private readonly _canvas: HTMLCanvasElement;\r\n  private readonly _engine: Engine;\r\n  private readonly _scene: Scene;\r\n  private readonly _camera: ArcRotateCamera;\r\n  private readonly _cursor: Mesh;\r\n  private readonly _defaultMaterial;\r\n  private readonly _contextMenu: ContextMenu;\r\n  private readonly _promptPopup: PromptPopup;\r\n  private _selectedMesh: Nullable<AbstractMesh> = null;\r\n  public readonly gizmoManager: GizmoManager;\r\n  public readonly cursorPosition: Vector3 = Vector3.Zero();\r\n\r\n  ground: GroundMesh;\r\n\r\n  constructor(canvasElement?: HTMLCanvasElement) {\r\n    if (canvasElement === undefined) {\r\n      this._canvas = document.createElement(\"canvas\");\r\n      document.body.appendChild(this._canvas);\r\n    } else {\r\n      this._canvas = canvasElement;\r\n    }\r\n\r\n    this._canvas.width = win.innerWidth;\r\n    this._canvas.height = win.innerHeight;\r\n    win.addEventListener(\"resize\", () => {\r\n      this._canvas.width = win.innerWidth;\r\n      this._canvas.height = win.innerHeight;\r\n    });\r\n\r\n    this._contextMenu = new ContextMenu(document.body, this._canvas);\r\n    const primitiveMenu = new ContextMenu();\r\n\r\n    this._promptPopup = new PromptPopup(document.body, (value) => {\r\n      this.fetchModelFromText(value).then(async (url) => {\r\n        const result = await SceneLoader.ImportMeshAsync(\r\n          null,\r\n          url,\r\n          undefined,\r\n          this._scene,\r\n          undefined,\r\n          \".glb\"         \r\n        );\r\n\r\n        const mesh = result.meshes[0];\r\n        mesh.position.copyFrom(this.cursorPosition);\r\n        mesh.material = this._defaultMaterial;\r\n        this.selectObject(mesh);\r\n      });\r\n    });\r\n\r\n    primitiveMenu.addItem(\"Box\", () => {\r\n      this.addPrimitive(\r\n        \"box\",\r\n        this.cursorPosition,\r\n        Vector3.Zero(),\r\n        new Vector3(1, 1, 1)\r\n      );\r\n    });\r\n    primitiveMenu.addItem(\"Sphere\", () => {\r\n      this.addPrimitive(\r\n        \"sphere\",\r\n        this.cursorPosition,\r\n        Vector3.Zero(),\r\n        new Vector3(1, 1, 1)\r\n      );\r\n    });\r\n    primitiveMenu.addItem(\"Cylinder\", () => {\r\n      this.addPrimitive(\r\n        \"cylinder\",\r\n        this.cursorPosition,\r\n        Vector3.Zero(),\r\n        new Vector3(1, 1, 1)\r\n      );\r\n    });\r\n    primitiveMenu.addItem(\"Torus\", () => {\r\n      this.addPrimitive(\r\n        \"torus\",\r\n        this.cursorPosition,\r\n        Vector3.Zero(),\r\n        new Vector3(1, 1, 1)\r\n      );\r\n    });\r\n\r\n    this._contextMenu.addSubmenu(\"Add Primitive\", primitiveMenu);\r\n    this._contextMenu.addItem(\"Generate object with AI\", () => {\r\n      this._promptPopup.show(\r\n        \"Generate Object\",\r\n        'Enter an object description such as \"blue couch\".',\r\n        { x: this._scene.pointerX, y: this._scene.pointerY }\r\n      );\r\n    });\r\n\r\n    this._engine = new Engine(this._canvas, true);\r\n    this._scene = new Scene(this._engine);\r\n    // Inspector.Show(this._scene, {\r\n    //   enableClose: false,\r\n    //   enablePopup: false,\r\n    //   overlay: true,\r\n    // });\r\n    this._cursor = MeshBuilder.CreateSphere(\r\n      \"cursor\",\r\n      { diameter: 0.1, segments: 16 },\r\n      this._scene\r\n    );\r\n\r\n    const cursorMaterial = new StandardMaterial(\"cursorMaterial\", this._scene);\r\n    cursorMaterial.diffuseColor = new Color3(0, 1, 0); // Green color\r\n    cursorMaterial.specularColor = new Color3(0, 0, 0); // No shininess\r\n    this._cursor.material = cursorMaterial;\r\n    this._cursor.material.alpha = 0.5;\r\n    this._cursor.isVisible = false;\r\n\r\n    this._defaultMaterial = new StandardMaterial(\r\n      \"defaultMaterial\",\r\n      this._scene\r\n    );\r\n    this._defaultMaterial.diffuseColor = new Color3(0.8, 0.8, 0.8); // Off white color\r\n    this._defaultMaterial.specularColor = new Color3(0, 0, 0); // No shininess\r\n    this._camera = new ArcRotateCamera(\r\n      \"camera\",\r\n      Math.PI / 2,\r\n      Math.PI / 2,\r\n      10,\r\n      new Vector3(0, 1.65, 0),\r\n      this._scene\r\n    );\r\n    this._camera.attachControl(this._canvas, true);\r\n\r\n    const light = new HemisphericLight(\r\n      \"light\",\r\n      new Vector3(0, 1, 0),\r\n      this._scene\r\n    );\r\n    light.intensity = 0.7;\r\n\r\n    const pointLight = new PointLight(\r\n      \"pointLight\",\r\n      new Vector3(0, 10, 0),\r\n      this._scene\r\n    );\r\n    pointLight.intensity = 0.7;\r\n\r\n    this.gizmoManager = this._createGizmos();\r\n    this.ground = this._createGround();\r\n\r\n    this._engine.runRenderLoop(() => {\r\n      this._scene.render();\r\n    });\r\n  }\r\n\r\n  public get domElement() {\r\n    return this._canvas;\r\n  }\r\n\r\n  private _createGround(width: number = 10, height: number = 10): GroundMesh {\r\n    if (this.ground) {\r\n      this.ground.dispose();\r\n    }\r\n\r\n    const ground = MeshBuilder.CreateGround(\r\n      \"ground\",\r\n      { width, height },\r\n      this._scene\r\n    );\r\n    ground.material = this._defaultMaterial;\r\n\r\n    return ground;\r\n  }\r\n\r\n  private _createGizmos(): GizmoManager {\r\n    if (this.gizmoManager) {\r\n      throw new Error(\"Gizmo manager already created\");\r\n    }\r\n\r\n    win.addEventListener(\"keydown\", (event: KeyboardEvent) => {\r\n      if (event.target instanceof HTMLInputElement) {\r\n        return;\r\n      }\r\n      if (event.key === \"Delete\") {\r\n        if (this._selectedMesh) {\r\n          gizmoManager.attachToMesh(null);\r\n          this._selectedMesh.dispose();\r\n        }\r\n      } else if (event.key === \"e\" && this._selectedMesh !== this._cursor) {\r\n        if (this._selectedMesh) {\r\n          gizmoManager.rotationGizmoEnabled = true;\r\n          gizmoManager.positionGizmoEnabled = false;\r\n          gizmoManager.scaleGizmoEnabled = false;\r\n          gizmoManager.boundingBoxGizmoEnabled = false;\r\n        }\r\n      } else if (event.key === \"w\") {\r\n        if (this._selectedMesh) {\r\n          gizmoManager.positionGizmoEnabled = true;\r\n          gizmoManager.rotationGizmoEnabled = false;\r\n          gizmoManager.scaleGizmoEnabled = false;\r\n          gizmoManager.boundingBoxGizmoEnabled = false;\r\n        }\r\n      } else if (event.key === \"q\" && this._selectedMesh !== this._cursor) {\r\n        if (this._selectedMesh) {\r\n          gizmoManager.positionGizmoEnabled = true;\r\n          gizmoManager.rotationGizmoEnabled = true;\r\n          gizmoManager.boundingBoxGizmoEnabled = true;\r\n          gizmoManager.scaleGizmoEnabled = false;\r\n        }\r\n      } else if (event.key === \"s\" && this._selectedMesh !== this._cursor) {\r\n        if (this._selectedMesh) {\r\n          gizmoManager.positionGizmoEnabled = false;\r\n          gizmoManager.rotationGizmoEnabled = false;\r\n          gizmoManager.scaleGizmoEnabled = true;\r\n          gizmoManager.boundingBoxGizmoEnabled = false;\r\n        }\r\n      } else if (event.key === \"r\" && this._selectedMesh !== this._cursor) {\r\n        if (this._selectedMesh) {\r\n          gizmoManager.boundingBoxGizmoEnabled = true;\r\n          gizmoManager.positionGizmoEnabled = false;\r\n          gizmoManager.rotationGizmoEnabled = false;\r\n          gizmoManager.scaleGizmoEnabled = false;\r\n        }\r\n      } else if (event.key === \"c\") {\r\n        this._placeCursor();\r\n      } else if (event.key == \"Escape\") {\r\n        if (this._contextMenu.isVisible()) {\r\n          this._contextMenu.hide();\r\n        } else {\r\n          this.deselectAll();\r\n        }\r\n      }\r\n    });\r\n\r\n    this._scene.onPointerObservable.add((eventData) => {\r\n      if (eventData.event.button === 2) {\r\n        if (this._selectedMesh !== this._cursor) {\r\n          this._placeCursor();\r\n        }\r\n        return;\r\n      }\r\n\r\n      if (eventData.event.button !== 0) {\r\n        return;\r\n      }\r\n\r\n      if (eventData.type === PointerEventTypes.POINTERDOUBLETAP) {\r\n        if (eventData.pickInfo?.hit && eventData.pickInfo.pickedMesh) {\r\n          this.selectObject(eventData.pickInfo.pickedMesh);\r\n        } else {\r\n          this.deselectAll();\r\n        }\r\n      } else if (eventData.type === PointerEventTypes.POINTERDOWN) {\r\n        if (eventData.pickInfo?.hit && eventData.pickInfo.pickedMesh) {\r\n          if (eventData.pickInfo.pickedMesh !== this._selectedMesh) {\r\n            this.deselectAll();\r\n          }\r\n        } else {\r\n          this.deselectAll();\r\n        }\r\n      }\r\n    });\r\n\r\n    const gizmoManager = new GizmoManager(this._scene);\r\n    gizmoManager.usePointerToAttachGizmos = false;\r\n    gizmoManager.gizmos.positionGizmo = new PositionGizmo();\r\n    gizmoManager.gizmos.rotationGizmo = new RotationGizmo();\r\n    gizmoManager.gizmos.scaleGizmo = new ScaleGizmo();\r\n    gizmoManager.gizmos.boundingBoxGizmo = new BoundingBoxGizmo();\r\n    gizmoManager.positionGizmoEnabled = false;\r\n    gizmoManager.rotationGizmoEnabled = false;\r\n    gizmoManager.scaleGizmoEnabled = false;\r\n    gizmoManager.boundingBoxGizmoEnabled = false;\r\n\r\n    return gizmoManager;\r\n  }\r\n\r\n  private _placeCursor() {\r\n    const pickResult = this._scene.pick(\r\n      this._scene.pointerX,\r\n      this._scene.pointerY\r\n    );\r\n    if (pickResult.hit && pickResult.pickedPoint) {\r\n      this.cursorPosition.copyFrom(pickResult.pickedPoint);\r\n      this._cursor.position.copyFrom(this.cursorPosition);\r\n      this._cursor.isVisible = true;\r\n      this.selectObject(this._cursor);\r\n    }\r\n  }\r\n\r\n  public selectObject(mesh: AbstractMesh) {\r\n    if (mesh !== this._cursor) {\r\n      this._cursor.isVisible = false;\r\n    }\r\n\r\n    if (mesh === this._selectedMesh) {\r\n      return;\r\n    }\r\n\r\n    this._selectedMesh = mesh;\r\n    // this._scene.debugLayer.select(selectedMesh);\r\n\r\n    this.gizmoManager.positionGizmoEnabled = true;\r\n    this.gizmoManager.rotationGizmoEnabled = false;\r\n    this.gizmoManager.scaleGizmoEnabled = false;\r\n    this.gizmoManager.boundingBoxGizmoEnabled = false;\r\n    this.gizmoManager.attachToMesh(this._selectedMesh);\r\n  }\r\n\r\n  public deselectAll(): void {\r\n    this._selectedMesh = null;\r\n    this.gizmoManager.attachToMesh(null);\r\n    this.gizmoManager.positionGizmoEnabled = false;\r\n    this.gizmoManager.rotationGizmoEnabled = false;\r\n    this.gizmoManager.scaleGizmoEnabled = false;\r\n    this.gizmoManager.boundingBoxGizmoEnabled = false;\r\n    this._cursor.isVisible = false;\r\n    this._contextMenu.hide();\r\n    this._promptPopup.hide();\r\n  }\r\n\r\n  public addPrimitive(\r\n    type: \"box\" | \"sphere\" | \"cylinder\" | \"torus\",\r\n    position: Vector3,\r\n    rotation: Vector3,\r\n    size: Vector3\r\n  ) {\r\n    let mesh: Mesh;\r\n    switch (type) {\r\n      case \"box\":\r\n        mesh = MeshBuilder.CreateBox(\"box\", { size: 1 }, this._scene);\r\n        break;\r\n      case \"sphere\":\r\n        mesh = MeshBuilder.CreateSphere(\"sphere\", { diameter: 1 }, this._scene);\r\n        break;\r\n      case \"cylinder\":\r\n        mesh = MeshBuilder.CreateCylinder(\r\n          \"cylinder\",\r\n          { diameterTop: 1, diameterBottom: 1, height: 1 },\r\n          this._scene\r\n        );\r\n        break;\r\n      case \"torus\":\r\n        mesh = MeshBuilder.CreateTorus(\r\n          \"torus\",\r\n          { diameter: 1, thickness: 0.5 },\r\n          this._scene\r\n        );\r\n        break;\r\n      default:\r\n        throw new Error(\"Invalid primitive type\");\r\n    }\r\n\r\n    mesh.position.copyFrom(position);\r\n    mesh.rotation.copyFrom(rotation);\r\n    mesh.scaling.copyFrom(size);\r\n    mesh.material = this._defaultMaterial;\r\n\r\n    this.selectObject(mesh);\r\n  }\r\n\r\n  public async fetchModelFromText(text: string) {\r\n    const request: Txt2ModelShapERequest = {\r\n      prompt: text,\r\n      format: \"glb\",\r\n    };\r\n    return new Promise<string>((resolve, reject) => {\r\n      fetch(\"/api/txt2model/shape\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(request),\r\n      })\r\n        .then((response) => {\r\n          response\r\n            .blob()\r\n            .then((blob) => {\r\n              resolve(URL.createObjectURL(blob));\r\n            })\r\n            .catch((error) => {\r\n              reject(error);\r\n            });\r\n        })\r\n        .catch((error) => {\r\n          reject(error);\r\n        });\r\n    });\r\n  }\r\n\r\n  public enableXR() {\r\n    const floor = this._scene.getMeshByName(\"floor\");\r\n    if (!floor) {\r\n      throw new Error(\"Floor not found\");\r\n    }\r\n    this._scene.createDefaultXRExperienceAsync({\r\n      floorMeshes: [floor],\r\n    });\r\n  }\r\n}\r\n"],"names":["container","attachedElement","_submenus","this","domElement","document","createElement","classList","add","appendChild","hide","addEventListener","event","preventDefault","show","clientX","clientY","isVisible","style","display","addItem","label","callback","item","textContent","addSubmenu","submenu","e","offsetLeft","offsetWidth","offsetTop","target","contains","push","x","y","left","top","i","length","onOk","_header","_text","_input","key","getValue","_button","title","text","position","focus","value","win","window","canvasElement","_selectedMesh","cursorPosition","Zero","undefined","_canvas","body","width","innerWidth","height","innerHeight","_contextMenu","ContextMenu","primitiveMenu","_promptPopup","PromptPopup","fetchModelFromText","then","url","ImportMeshAsync","_scene","result","mesh","meshes","copyFrom","material","_defaultMaterial","selectObject","addPrimitive","pointerX","pointerY","_engine","_cursor","CreateSphere","diameter","segments","cursorMaterial","diffuseColor","specularColor","alpha","_camera","Math","PI","attachControl","intensity","gizmoManager","_createGizmos","ground","_createGround","runRenderLoop","render","dispose","CreateGround","Error","HTMLInputElement","attachToMesh","rotationGizmoEnabled","positionGizmoEnabled","scaleGizmoEnabled","boundingBoxGizmoEnabled","_placeCursor","deselectAll","onPointerObservable","eventData","button","type","POINTERDOUBLETAP","pickInfo","hit","pickedMesh","POINTERDOWN","usePointerToAttachGizmos","gizmos","positionGizmo","rotationGizmo","scaleGizmo","boundingBoxGizmo","pickResult","pick","pickedPoint","rotation","size","CreateBox","CreateCylinder","diameterTop","diameterBottom","CreateTorus","thickness","scaling","request","prompt","format","Promise","resolve","reject","fetch","method","headers","JSON","stringify","response","blob","URL","createObjectURL","catch","error","enableXR","floor","getMeshByName","createDefaultXRExperienceAsync","floorMeshes"],"sourceRoot":""}