{"version":3,"file":"api.js","mappings":"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","sources":["webpack://monofy/webpack/bootstrap","webpack://monofy/webpack/runtime/define property getters","webpack://monofy/webpack/runtime/hasOwnProperty shorthand","webpack://monofy/webpack/runtime/make namespace object","webpack://monofy/./src/api.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n\n/** Body_pdf_rip_api_pdf_rip_post */\nexport interface BodyPdfRipApiPdfRipPost {\n  /**\n   * Pdf\n   * @format binary\n   */\n  pdf: File;\n}\n\n/** CannyRequest */\nexport interface CannyRequest {\n  /** Image */\n  image: string;\n  /**\n   * Threshold1\n   * @default 100\n   */\n  threshold1?: number;\n  /**\n   * Threshold2\n   * @default 200\n   */\n  threshold2?: number;\n  /** Width */\n  width?: number;\n  /** Height */\n  height?: number;\n  /**\n   * Return Json\n   * @default false\n   */\n  return_json?: boolean;\n}\n\n/** ChatCompletionRequest */\nexport interface ChatCompletionRequest {\n  /** Messages */\n  messages: any[];\n  /**\n   * Model\n   * @default \"local\"\n   */\n  model?: string;\n  /**\n   * Temperature\n   * @default 0.7\n   */\n  temperature?: number;\n  /**\n   * Top P\n   * @default 0.9\n   */\n  top_p?: number;\n  /**\n   * Top K\n   * @default 20\n   */\n  top_k?: number;\n  /**\n   * Max Emojis\n   * @default 1\n   */\n  max_emojis?: number;\n  /**\n   * Max Tokens\n   * @default 100\n   */\n  max_tokens?: number;\n  /**\n   * Frequency Penalty\n   * @default 1.05\n   */\n  frequency_penalty?: number;\n  /**\n   * Presence Penalty\n   * @default 0\n   */\n  presence_penalty?: number;\n  /**\n   * Stream\n   * @default false\n   */\n  stream?: boolean;\n  /** Context */\n  context?: string;\n  /**\n   * Bot Name\n   * @default \"Assistant\"\n   */\n  bot_name?: string;\n  /**\n   * User Name\n   * @default \"User\"\n   */\n  user_name?: string;\n}\n\n/** DepthRequest */\nexport interface DepthRequest {\n  /** Image */\n  image: string;\n  /**\n   * Median Filter\n   * @default 5\n   */\n  median_filter?: number;\n  /**\n   * Return Json\n   * @default false\n   */\n  return_json?: boolean;\n}\n\n/** DetectRequest */\nexport interface DetectRequest {\n  /** Image */\n  image: string;\n  /**\n   * Threshold\n   * @default 0.8\n   */\n  threshold?: number;\n  /**\n   * Return Image\n   * @default false\n   */\n  return_image?: boolean;\n}\n\n/** HTTPValidationError */\nexport interface HTTPValidationError {\n  /** Detail */\n  detail?: ValidationError[];\n}\n\n/** Img2ModelLGMRequest */\nexport interface Img2ModelLGMRequest {\n  /** Image */\n  image: string;\n  /**\n   * Num Inference Steps\n   * @default 40\n   */\n  num_inference_steps?: number;\n  /**\n   * Guidance Scale\n   * @default 3\n   */\n  guidance_scale?: number;\n  /**\n   * Negative Prompt\n   * @default \"\"\n   */\n  negative_prompt?: string;\n  /**\n   * Format\n   * @default \"ply\"\n   */\n  format?: \"glb\" | \"ply\";\n}\n\n/** Img2ModelTSRRequest */\nexport interface Img2ModelTSRRequest {\n  /** Image */\n  image: string;\n  /**\n   * Format\n   * @default \"glb\"\n   */\n  format?: \"glb\" | \"obj\";\n  /**\n   * Foreground Ratio\n   * @default [0.85]\n   */\n  foreground_ratio?: number;\n}\n\n/** Img2TxtRequest */\nexport interface Img2TxtRequest {\n  /**\n   * Prompt\n   * @default \"Describe the image.\"\n   */\n  prompt?: string;\n  /**\n   * History\n   * @default []\n   */\n  history?: object[];\n  /** Image */\n  image?: string;\n}\n\n/** Img2VidXTRequest */\nexport interface Img2VidXTRequest {\n  /** Image */\n  image?: string;\n  /**\n   * Motion Bucket\n   * @default 31\n   */\n  motion_bucket?: number;\n  /**\n   * Num Inference Steps\n   * @default 6\n   */\n  num_inference_steps?: number;\n  /**\n   * Width\n   * @default 512\n   */\n  width?: number;\n  /**\n   * Height\n   * @default 512\n   */\n  height?: number;\n  /**\n   * Fps\n   * @default 12\n   */\n  fps?: number;\n  /**\n   * Num Frames\n   * @default 24\n   */\n  num_frames?: number;\n  /**\n   * Noise\n   * @default 0\n   */\n  noise?: number;\n  /**\n   * Interpolate Film\n   * @default 1\n   */\n  interpolate_film?: number;\n  /**\n   * Interpolate Rife\n   * @default false\n   */\n  interpolate_rife?: boolean;\n  /**\n   * Fast Interpolate\n   * @default true\n   */\n  fast_interpolate?: boolean;\n  /**\n   * Seed\n   * @default -1\n   */\n  seed?: number;\n  /** Audio */\n  audio?: string;\n}\n\n/** MusicGenRequest */\nexport interface MusicGenRequest {\n  /** Prompt */\n  prompt: string;\n  /**\n   * Duration\n   * @default 10\n   */\n  duration?: number;\n  /**\n   * Temperature\n   * @default 0.9\n   */\n  temperature?: number;\n  /**\n   * Guidance Scale\n   * @default 6.5\n   */\n  guidance_scale?: number;\n  /**\n   * Format\n   * @default \"wav\"\n   */\n  format?: string;\n  /**\n   * Seed\n   * @default -1\n   */\n  seed?: number;\n  /**\n   * Top P\n   * @default 0.95\n   */\n  top_p?: number;\n  /**\n   * Streaming\n   * @default false\n   */\n  streaming?: boolean;\n  /** Wav Bytes */\n  wav_bytes?: string;\n}\n\n/** RembgRequest */\nexport interface RembgRequest {\n  /** Image */\n  image: string;\n  /** Width */\n  width: number;\n  /** Height */\n  height: number;\n}\n\n/** SummaryRequest */\nexport interface SummaryRequest {\n  /** Url */\n  url: string;\n  /**\n   * Prompt\n   * @default \"Summarize the following text scraped from the web.\"\n   */\n  prompt?: string;\n  /**\n   * Max Response Tokens\n   * @default 200\n   */\n  max_response_tokens?: number;\n}\n\n/** TTSRequest */\nexport interface TTSRequest {\n  /** Text */\n  text: string;\n  /**\n   * Language\n   * @default \"en\"\n   */\n  language?: string;\n  /**\n   * Voice\n   * @default \"female1\"\n   */\n  voice?: string;\n  /**\n   * Temperature\n   * @default 0.75\n   */\n  temperature?: number;\n  /**\n   * Speed\n   * @default 1\n   */\n  speed?: number;\n}\n\n/** Txt2ImgRequest */\nexport interface Txt2ImgRequest {\n  /**\n   * Prompt\n   * @default \"\"\n   */\n  prompt?: string;\n  /**\n   * Negative Prompt\n   * @default \"\"\n   */\n  negative_prompt?: string;\n  /**\n   * Width\n   * @default 768\n   */\n  width?: number;\n  /**\n   * Height\n   * @default 768\n   */\n  height?: number;\n  /**\n   * Guidance Scale\n   * @default 3\n   */\n  guidance_scale?: number;\n  /** Num Inference Steps */\n  num_inference_steps?: number;\n  /**\n   * Seed\n   * @default -1\n   */\n  seed?: number;\n  /**\n   * Model Index\n   * @default 0\n   */\n  model_index?: number;\n  /** Scheduler */\n  scheduler?: string;\n  /**\n   * Nsfw\n   * @default false\n   */\n  nsfw?: boolean;\n  /** Face Prompt */\n  face_prompt?: string;\n  /**\n   * Upscale\n   * @default 0\n   */\n  upscale?: number;\n  /**\n   * Strength\n   * @default 0.65\n   */\n  strength?: number;\n  /**\n   * Auto Lora\n   * @default true\n   */\n  auto_lora?: boolean;\n  /**\n   * Freeu\n   * @default false\n   */\n  freeu?: boolean;\n  /**\n   * Return Json\n   * @default false\n   */\n  return_json?: boolean;\n  /** Image */\n  image?: string;\n}\n\n/** Txt2ModelAvatarRequest */\nexport interface Txt2ModelAvatarRequest {\n  /** Prompt */\n  prompt: string;\n  /**\n   * Negative Prompt\n   * @default \"\"\n   */\n  negative_prompt?: string;\n}\n\n/** Txt2ModelShapERequest */\nexport interface Txt2ModelShapERequest {\n  /** Prompt */\n  prompt: string;\n  /**\n   * Guidance Scale\n   * @default 15\n   */\n  guidance_scale?: number;\n  /**\n   * Num Inference Steps\n   * @default 64\n   */\n  num_inference_steps?: number;\n  /**\n   * Format\n   * @default \"glb\"\n   */\n  format?: \"glb\" | \"ply\" | \"gif\";\n  /**\n   * Frame Size\n   * @default 256\n   */\n  frame_size?: number;\n}\n\n/** Txt2VidRequest */\nexport interface Txt2VidRequest {\n  /**\n   * Prompt\n   * @default \"\"\n   */\n  prompt?: string;\n  /**\n   * Negative Prompt\n   * @default \"\"\n   */\n  negative_prompt?: string;\n  /**\n   * Width\n   * @default 512\n   */\n  width?: number;\n  /**\n   * Height\n   * @default 512\n   */\n  height?: number;\n  /**\n   * Guidance Scale\n   * @default 2\n   */\n  guidance_scale?: number;\n  /**\n   * Num Frames\n   * @default 16\n   */\n  num_frames?: number;\n  /**\n   * Num Inference Steps\n   * @default 6\n   */\n  num_inference_steps?: number;\n  /**\n   * Fps\n   * @default 12\n   */\n  fps?: number;\n  /**\n   * Seed\n   * @default -1\n   */\n  seed?: number;\n  /**\n   * Interpolate Film\n   * @default 1\n   */\n  interpolate_film?: number;\n  /**\n   * Interpolate Rife\n   * @default 1\n   */\n  interpolate_rife?: number;\n  /**\n   * Fast Interpolate\n   * @default true\n   */\n  fast_interpolate?: boolean;\n  /** Audio */\n  audio?: string;\n}\n\n/** TxtPersonalityRequest */\nexport interface TxtPersonalityRequest {\n  /**\n   * Min Age\n   * @default 18\n   */\n  min_age?: number;\n  /**\n   * Max Age\n   * @default 80\n   */\n  max_age?: number;\n  /**\n   * Gender\n   * @default \"random\"\n   */\n  gender?: \"random\" | \"male\" | \"female\";\n  /**\n   * Description\n   * @default \"\"\n   */\n  description?: string;\n}\n\n/** ValidationError */\nexport interface ValidationError {\n  /** Location */\n  loc: (string | number)[];\n  /** Message */\n  msg: string;\n  /** Error Type */\n  type: string;\n}\n\n/** Vid2VidRequest */\nexport interface Vid2VidRequest {\n  /** Video */\n  video: string;\n  /** Prompt */\n  prompt: string;\n  /**\n   * Negative Prompt\n   * @default \"\"\n   */\n  negative_prompt?: string;\n  /**\n   * Seed\n   * @default -1\n   */\n  seed?: number;\n  /**\n   * Rows\n   * @default 2\n   */\n  rows?: number;\n  /**\n   * Cols\n   * @default 2\n   */\n  cols?: number;\n}\n\n/** VisionRequest */\nexport interface VisionRequest {\n  /** Image */\n  image: string;\n  /**\n   * Prompt\n   * @default \"Describe the image in a few words.\"\n   */\n  prompt?: string;\n  /**\n   * Seed\n   * @default -1\n   */\n  seed?: number;\n}\n\n/** YouTubeCaptionsRequest */\nexport interface YouTubeCaptionsRequest {\n  /** Url */\n  url: string;\n  /**\n   * Prompt\n   * @default \"Your task is to give a concise summary (one to 3 sentences) of a YouTube video.\"\n   */\n  prompt?: string;\n  /**\n   * Summary\n   * @default false\n   */\n  summary?: boolean;\n  /**\n   * Max Response Tokens\n   * @default 3000\n   */\n  max_response_tokens?: number;\n}\n\n/** YouTubeDownloadRequest */\nexport interface YouTubeDownloadRequest {\n  /** Url */\n  url: string;\n  /**\n   * Audio Only\n   * @default false\n   */\n  audio_only?: boolean;\n  /**\n   * Start Time\n   * @default 0\n   */\n  start_time?: number;\n  /** Length */\n  length?: number;\n  /**\n   * Format\n   * @default \"mp4\"\n   */\n  format?: \"mp4\" | \"gif\";\n  /**\n   * Fps\n   * @default 10\n   */\n  fps?: number;\n  /** Text */\n  text?: string;\n  /** Width */\n  width?: number;\n}\n\n/** YouTubeFramesRequest */\nexport interface YouTubeFramesRequest {\n  /** Url */\n  url: string;\n  /**\n   * Num Frames\n   * @default 10\n   */\n  num_frames?: number;\n  /**\n   * Trim Start\n   * @default 2\n   */\n  trim_start?: number;\n  /**\n   * Trim End\n   * @default 2\n   */\n  trim_end?: number;\n  /**\n   * Summary\n   * @default false\n   */\n  summary?: boolean;\n  /**\n   * Captions\n   * @default false\n   */\n  captions?: boolean;\n}\n\n/** YouTubeGridRequest */\nexport interface YouTubeGridRequest {\n  /** Url */\n  url: string;\n  /**\n   * Rows\n   * @default 3\n   */\n  rows?: number;\n  /**\n   * Cols\n   * @default 3\n   */\n  cols?: number;\n}\n\nexport type QueryParamsType = Record<string | number, any>;\nexport type ResponseFormat = keyof Omit<Body, \"body\" | \"bodyUsed\">;\n\nexport interface FullRequestParams extends Omit<RequestInit, \"body\"> {\n  /** set parameter to `true` for call `securityWorker` for this request */\n  secure?: boolean;\n  /** request path */\n  path: string;\n  /** content type of request body */\n  type?: ContentType;\n  /** query params */\n  query?: QueryParamsType;\n  /** format of response (i.e. response.json() -> format: \"json\") */\n  format?: ResponseFormat;\n  /** request body */\n  body?: unknown;\n  /** base url */\n  baseUrl?: string;\n  /** request cancellation token */\n  cancelToken?: CancelToken;\n}\n\nexport type RequestParams = Omit<FullRequestParams, \"body\" | \"method\" | \"query\" | \"path\">;\n\nexport interface ApiConfig<SecurityDataType = unknown> {\n  baseUrl?: string;\n  baseApiParams?: Omit<RequestParams, \"baseUrl\" | \"cancelToken\" | \"signal\">;\n  securityWorker?: (securityData: SecurityDataType | null) => Promise<RequestParams | void> | RequestParams | void;\n  customFetch?: typeof fetch;\n}\n\nexport interface HttpResponse<D extends unknown, E extends unknown = unknown> extends Response {\n  data: D;\n  error: E;\n}\n\ntype CancelToken = Symbol | string | number;\n\nexport enum ContentType {\n  Json = \"application/json\",\n  FormData = \"multipart/form-data\",\n  UrlEncoded = \"application/x-www-form-urlencoded\",\n  Text = \"text/plain\",\n}\n\nexport class HttpClient<SecurityDataType = unknown> {\n  public baseUrl: string = \"\";\n  private securityData: SecurityDataType | null = null;\n  private securityWorker?: ApiConfig<SecurityDataType>[\"securityWorker\"];\n  private abortControllers = new Map<CancelToken, AbortController>();\n  private customFetch = (...fetchParams: Parameters<typeof fetch>) => fetch(...fetchParams);\n\n  private baseApiParams: RequestParams = {\n    credentials: \"same-origin\",\n    headers: {},\n    redirect: \"follow\",\n    referrerPolicy: \"no-referrer\",\n  };\n\n  constructor(apiConfig: ApiConfig<SecurityDataType> = {}) {\n    Object.assign(this, apiConfig);\n  }\n\n  public setSecurityData = (data: SecurityDataType | null) => {\n    this.securityData = data;\n  };\n\n  protected encodeQueryParam(key: string, value: any) {\n    const encodedKey = encodeURIComponent(key);\n    return `${encodedKey}=${encodeURIComponent(typeof value === \"number\" ? value : `${value}`)}`;\n  }\n\n  protected addQueryParam(query: QueryParamsType, key: string) {\n    return this.encodeQueryParam(key, query[key]);\n  }\n\n  protected addArrayQueryParam(query: QueryParamsType, key: string) {\n    const value = query[key];\n    return value.map((v: any) => this.encodeQueryParam(key, v)).join(\"&\");\n  }\n\n  protected toQueryString(rawQuery?: QueryParamsType): string {\n    const query = rawQuery || {};\n    const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n    return keys\n      .map((key) => (Array.isArray(query[key]) ? this.addArrayQueryParam(query, key) : this.addQueryParam(query, key)))\n      .join(\"&\");\n  }\n\n  protected addQueryParams(rawQuery?: QueryParamsType): string {\n    const queryString = this.toQueryString(rawQuery);\n    return queryString ? `?${queryString}` : \"\";\n  }\n\n  private contentFormatters: Record<ContentType, (input: any) => any> = {\n    [ContentType.Json]: (input: any) =>\n      input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n    [ContentType.Text]: (input: any) => (input !== null && typeof input !== \"string\" ? JSON.stringify(input) : input),\n    [ContentType.FormData]: (input: any) =>\n      Object.keys(input || {}).reduce((formData, key) => {\n        const property = input[key];\n        formData.append(\n          key,\n          property instanceof Blob\n            ? property\n            : typeof property === \"object\" && property !== null\n            ? JSON.stringify(property)\n            : `${property}`,\n        );\n        return formData;\n      }, new FormData()),\n    [ContentType.UrlEncoded]: (input: any) => this.toQueryString(input),\n  };\n\n  protected mergeRequestParams(params1: RequestParams, params2?: RequestParams): RequestParams {\n    return {\n      ...this.baseApiParams,\n      ...params1,\n      ...(params2 || {}),\n      headers: {\n        ...(this.baseApiParams.headers || {}),\n        ...(params1.headers || {}),\n        ...((params2 && params2.headers) || {}),\n      },\n    };\n  }\n\n  protected createAbortSignal = (cancelToken: CancelToken): AbortSignal | undefined => {\n    if (this.abortControllers.has(cancelToken)) {\n      const abortController = this.abortControllers.get(cancelToken);\n      if (abortController) {\n        return abortController.signal;\n      }\n      return void 0;\n    }\n\n    const abortController = new AbortController();\n    this.abortControllers.set(cancelToken, abortController);\n    return abortController.signal;\n  };\n\n  public abortRequest = (cancelToken: CancelToken) => {\n    const abortController = this.abortControllers.get(cancelToken);\n\n    if (abortController) {\n      abortController.abort();\n      this.abortControllers.delete(cancelToken);\n    }\n  };\n\n  public request = async <T = any, E = any>({\n    body,\n    secure,\n    path,\n    type,\n    query,\n    format,\n    baseUrl,\n    cancelToken,\n    ...params\n  }: FullRequestParams): Promise<HttpResponse<T, E>> => {\n    const secureParams =\n      ((typeof secure === \"boolean\" ? secure : this.baseApiParams.secure) &&\n        this.securityWorker &&\n        (await this.securityWorker(this.securityData))) ||\n      {};\n    const requestParams = this.mergeRequestParams(params, secureParams);\n    const queryString = query && this.toQueryString(query);\n    const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n    const responseFormat = format || requestParams.format;\n\n    return this.customFetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n      ...requestParams,\n      headers: {\n        ...(requestParams.headers || {}),\n        ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n      },\n      signal: (cancelToken ? this.createAbortSignal(cancelToken) : requestParams.signal) || null,\n      body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n    }).then(async (response) => {\n      const r = response as HttpResponse<T, E>;\n      r.data = null as unknown as T;\n      r.error = null as unknown as E;\n\n      const data = !responseFormat\n        ? r\n        : await response[responseFormat]()\n            .then((data) => {\n              if (r.ok) {\n                r.data = data;\n              } else {\n                r.error = data;\n              }\n              return r;\n            })\n            .catch((e) => {\n              r.error = e;\n              return r;\n            });\n\n      if (cancelToken) {\n        this.abortControllers.delete(cancelToken);\n      }\n\n      if (!response.ok) throw data;\n      return data;\n    });\n  };\n}\n\n/**\n * @title monofy-ai\n * @version 0.0.2\n *\n * Simple and multifaceted API for AI\n */\nexport class Api<SecurityDataType extends unknown> extends HttpClient<SecurityDataType> {\n  api = {\n    /**\n     * No description\n     *\n     * @tags Image Processing\n     * @name CannyFromUrlApiImgCannyGet\n     * @summary Canny From Url\n     * @request GET:/api/img/canny\n     */\n    cannyFromUrlApiImgCannyGet: (\n      query: {\n        /** Image */\n        image: string;\n        /**\n         * Threshold1\n         * @default 100\n         */\n        threshold1?: number;\n        /**\n         * Threshold2\n         * @default 200\n         */\n        threshold2?: number;\n        /** Width */\n        width?: number;\n        /** Height */\n        height?: number;\n        /**\n         * Return Json\n         * @default false\n         */\n        return_json?: boolean;\n      },\n      params: RequestParams = {},\n    ) =>\n      this.request<any, HTTPValidationError>({\n        path: `/api/img/canny`,\n        method: \"GET\",\n        query: query,\n        format: \"json\",\n        ...params,\n      }),\n\n    /**\n     * No description\n     *\n     * @tags Image Processing\n     * @name CannyApiImgCannyPost\n     * @summary Canny\n     * @request POST:/api/img/canny\n     */\n    cannyApiImgCannyPost: (data: CannyRequest, params: RequestParams = {}) =>\n      this.request<any, HTTPValidationError>({\n        path: `/api/img/canny`,\n        method: \"POST\",\n        body: data,\n        type: ContentType.Json,\n        format: \"json\",\n        ...params,\n      }),\n\n    /**\n     * No description\n     *\n     * @tags Image Generation\n     * @name Txt2ImgGetApiTxt2ImgGet\n     * @summary Txt2Img Get\n     * @request GET:/api/txt2img\n     */\n    txt2ImgGetApiTxt2ImgGet: (\n      query?: {\n        /**\n         * Prompt\n         * @default \"\"\n         */\n        prompt?: string;\n        /**\n         * Negative Prompt\n         * @default \"\"\n         */\n        negative_prompt?: string;\n        /**\n         * Width\n         * @default 768\n         */\n        width?: number;\n        /**\n         * Height\n         * @default 768\n         */\n        height?: number;\n        /**\n         * Guidance Scale\n         * @default 3\n         */\n        guidance_scale?: number;\n        /** Num Inference Steps */\n        num_inference_steps?: number;\n        /**\n         * Seed\n         * @default -1\n         */\n        seed?: number;\n        /**\n         * Model Index\n         * @default 0\n         */\n        model_index?: number;\n        /** Scheduler */\n        scheduler?: string;\n        /**\n         * Nsfw\n         * @default false\n         */\n        nsfw?: boolean;\n        /** Face Prompt */\n        face_prompt?: string;\n        /**\n         * Upscale\n         * @default 0\n         */\n        upscale?: number;\n        /**\n         * Strength\n         * @default 0.65\n         */\n        strength?: number;\n        /**\n         * Auto Lora\n         * @default true\n         */\n        auto_lora?: boolean;\n        /**\n         * Freeu\n         * @default false\n         */\n        freeu?: boolean;\n        /**\n         * Return Json\n         * @default false\n         */\n        return_json?: boolean;\n        /** Image */\n        image?: string;\n      },\n      params: RequestParams = {},\n    ) =>\n      this.request<any, HTTPValidationError>({\n        path: `/api/txt2img`,\n        method: \"GET\",\n        query: query,\n        format: \"json\",\n        ...params,\n      }),\n\n    /**\n     * No description\n     *\n     * @tags Image Generation\n     * @name Txt2ImgApiTxt2ImgPost\n     * @summary Txt2Img\n     * @request POST:/api/txt2img\n     */\n    txt2ImgApiTxt2ImgPost: (data: Txt2ImgRequest, params: RequestParams = {}) =>\n      this.request<any, HTTPValidationError>({\n        path: `/api/txt2img`,\n        method: \"POST\",\n        body: data,\n        type: ContentType.Json,\n        format: \"json\",\n        ...params,\n      }),\n\n    /**\n     * No description\n     *\n     * @tags Image Generation\n     * @name Img2ImgFromUrlApiImg2ImgGet\n     * @summary Img2Img From Url\n     * @request GET:/api/img2img\n     */\n    img2ImgFromUrlApiImg2ImgGet: (\n      query?: {\n        /**\n         * Prompt\n         * @default \"\"\n         */\n        prompt?: string;\n        /**\n         * Negative Prompt\n         * @default \"\"\n         */\n        negative_prompt?: string;\n        /**\n         * Width\n         * @default 768\n         */\n        width?: number;\n        /**\n         * Height\n         * @default 768\n         */\n        height?: number;\n        /**\n         * Guidance Scale\n         * @default 3\n         */\n        guidance_scale?: number;\n        /** Num Inference Steps */\n        num_inference_steps?: number;\n        /**\n         * Seed\n         * @default -1\n         */\n        seed?: number;\n        /**\n         * Model Index\n         * @default 0\n         */\n        model_index?: number;\n        /** Scheduler */\n        scheduler?: string;\n        /**\n         * Nsfw\n         * @default false\n         */\n        nsfw?: boolean;\n        /** Face Prompt */\n        face_prompt?: string;\n        /**\n         * Upscale\n         * @default 0\n         */\n        upscale?: number;\n        /**\n         * Strength\n         * @default 0.65\n         */\n        strength?: number;\n        /**\n         * Auto Lora\n         * @default true\n         */\n        auto_lora?: boolean;\n        /**\n         * Freeu\n         * @default false\n         */\n        freeu?: boolean;\n        /**\n         * Return Json\n         * @default false\n         */\n        return_json?: boolean;\n        /** Image */\n        image?: string;\n      },\n      params: RequestParams = {},\n    ) =>\n      this.request<any, HTTPValidationError>({\n        path: `/api/img2img`,\n        method: \"GET\",\n        query: query,\n        format: \"json\",\n        ...params,\n      }),\n\n    /**\n     * No description\n     *\n     * @tags Image Generation\n     * @name Img2ImgApiImg2ImgPost\n     * @summary Img2Img\n     * @request POST:/api/img2img\n     */\n    img2ImgApiImg2ImgPost: (data: Txt2ImgRequest, params: RequestParams = {}) =>\n      this.request<any, HTTPValidationError>({\n        path: `/api/img2img`,\n        method: \"POST\",\n        body: data,\n        type: ContentType.Json,\n        format: \"json\",\n        ...params,\n      }),\n\n    /**\n     * No description\n     *\n     * @tags Image Generation\n     * @name InpaintFromUrlApiInpaintGet\n     * @summary Inpaint From Url\n     * @request GET:/api/inpaint\n     */\n    inpaintFromUrlApiInpaintGet: (\n      query?: {\n        /**\n         * Prompt\n         * @default \"\"\n         */\n        prompt?: string;\n        /**\n         * Negative Prompt\n         * @default \"\"\n         */\n        negative_prompt?: string;\n        /**\n         * Width\n         * @default 768\n         */\n        width?: number;\n        /**\n         * Height\n         * @default 768\n         */\n        height?: number;\n        /**\n         * Guidance Scale\n         * @default 3\n         */\n        guidance_scale?: number;\n        /** Num Inference Steps */\n        num_inference_steps?: number;\n        /**\n         * Seed\n         * @default -1\n         */\n        seed?: number;\n        /**\n         * Model Index\n         * @default 0\n         */\n        model_index?: number;\n        /** Scheduler */\n        scheduler?: string;\n        /**\n         * Nsfw\n         * @default false\n         */\n        nsfw?: boolean;\n        /** Face Prompt */\n        face_prompt?: string;\n        /**\n         * Upscale\n         * @default 0\n         */\n        upscale?: number;\n        /**\n         * Strength\n         * @default 0.65\n         */\n        strength?: number;\n        /**\n         * Auto Lora\n         * @default true\n         */\n        auto_lora?: boolean;\n        /**\n         * Freeu\n         * @default false\n         */\n        freeu?: boolean;\n        /**\n         * Return Json\n         * @default false\n         */\n        return_json?: boolean;\n        /** Image */\n        image?: string;\n      },\n      params: RequestParams = {},\n    ) =>\n      this.request<any, HTTPValidationError>({\n        path: `/api/inpaint`,\n        method: \"GET\",\n        query: query,\n        format: \"json\",\n        ...params,\n      }),\n\n    /**\n     * No description\n     *\n     * @tags Image Generation\n     * @name InpaintApiInpaintPost\n     * @summary Inpaint\n     * @request POST:/api/inpaint\n     */\n    inpaintApiInpaintPost: (data: Txt2ImgRequest, params: RequestParams = {}) =>\n      this.request<any, HTTPValidationError>({\n        path: `/api/inpaint`,\n        method: \"POST\",\n        body: data,\n        type: ContentType.Json,\n        format: \"json\",\n        ...params,\n      }),\n\n    /**\n     * No description\n     *\n     * @tags Image Generation\n     * @name Txt2ImgFromUrlApiTxt2ImgCannyGet\n     * @summary Txt2Img From Url\n     * @request GET:/api/txt2img/canny\n     */\n    txt2ImgFromUrlApiTxt2ImgCannyGet: (\n      query?: {\n        /**\n         * Prompt\n         * @default \"\"\n         */\n        prompt?: string;\n        /**\n         * Negative Prompt\n         * @default \"\"\n         */\n        negative_prompt?: string;\n        /**\n         * Width\n         * @default 768\n         */\n        width?: number;\n        /**\n         * Height\n         * @default 768\n         */\n        height?: number;\n        /**\n         * Guidance Scale\n         * @default 3\n         */\n        guidance_scale?: number;\n        /** Num Inference Steps */\n        num_inference_steps?: number;\n        /**\n         * Seed\n         * @default -1\n         */\n        seed?: number;\n        /**\n         * Model Index\n         * @default 0\n         */\n        model_index?: number;\n        /** Scheduler */\n        scheduler?: string;\n        /**\n         * Nsfw\n         * @default false\n         */\n        nsfw?: boolean;\n        /** Face Prompt */\n        face_prompt?: string;\n        /**\n         * Upscale\n         * @default 0\n         */\n        upscale?: number;\n        /**\n         * Strength\n         * @default 0.65\n         */\n        strength?: number;\n        /**\n         * Auto Lora\n         * @default true\n         */\n        auto_lora?: boolean;\n        /**\n         * Freeu\n         * @default false\n         */\n        freeu?: boolean;\n        /**\n         * Return Json\n         * @default false\n         */\n        return_json?: boolean;\n        /** Image */\n        image?: string;\n      },\n      params: RequestParams = {},\n    ) =>\n      this.request<any, HTTPValidationError>({\n        path: `/api/txt2img/canny`,\n        method: \"GET\",\n        query: query,\n        format: \"json\",\n        ...params,\n      }),\n\n    /**\n     * No description\n     *\n     * @tags Image Generation\n     * @name Txt2ImgApiTxt2ImgCannyPost\n     * @summary Txt2Img\n     * @request POST:/api/txt2img/canny\n     */\n    txt2ImgApiTxt2ImgCannyPost: (data: Txt2ImgRequest, params: RequestParams = {}) =>\n      this.request<any, HTTPValidationError>({\n        path: `/api/txt2img/canny`,\n        method: \"POST\",\n        body: data,\n        type: ContentType.Json,\n        format: \"json\",\n        ...params,\n      }),\n\n    /**\n     * No description\n     *\n     * @tags Image Generation\n     * @name Txt2ImgFromUrlApiTxt2ImgDepthGet\n     * @summary Txt2Img From Url\n     * @request GET:/api/txt2img/depth\n     */\n    txt2ImgFromUrlApiTxt2ImgDepthGet: (\n      query?: {\n        /**\n         * Prompt\n         * @default \"\"\n         */\n        prompt?: string;\n        /**\n         * Negative Prompt\n         * @default \"\"\n         */\n        negative_prompt?: string;\n        /**\n         * Width\n         * @default 768\n         */\n        width?: number;\n        /**\n         * Height\n         * @default 768\n         */\n        height?: number;\n        /**\n         * Guidance Scale\n         * @default 3\n         */\n        guidance_scale?: number;\n        /** Num Inference Steps */\n        num_inference_steps?: number;\n        /**\n         * Seed\n         * @default -1\n         */\n        seed?: number;\n        /**\n         * Model Index\n         * @default 0\n         */\n        model_index?: number;\n        /** Scheduler */\n        scheduler?: string;\n        /**\n         * Nsfw\n         * @default false\n         */\n        nsfw?: boolean;\n        /** Face Prompt */\n        face_prompt?: string;\n        /**\n         * Upscale\n         * @default 0\n         */\n        upscale?: number;\n        /**\n         * Strength\n         * @default 0.65\n         */\n        strength?: number;\n        /**\n         * Auto Lora\n         * @default true\n         */\n        auto_lora?: boolean;\n        /**\n         * Freeu\n         * @default false\n         */\n        freeu?: boolean;\n        /**\n         * Return Json\n         * @default false\n         */\n        return_json?: boolean;\n        /** Image */\n        image?: string;\n      },\n      params: RequestParams = {},\n    ) =>\n      this.request<any, HTTPValidationError>({\n        path: `/api/txt2img/depth`,\n        method: \"GET\",\n        query: query,\n        format: \"json\",\n        ...params,\n      }),\n\n    /**\n     * No description\n     *\n     * @tags Image Generation\n     * @name Txt2ImgApiTxt2ImgDepthPost\n     * @summary Txt2Img\n     * @request POST:/api/txt2img/depth\n     */\n    txt2ImgApiTxt2ImgDepthPost: (data: Txt2ImgRequest, params: RequestParams = {}) =>\n      this.request<any, HTTPValidationError>({\n        path: `/api/txt2img/depth`,\n        method: \"POST\",\n        body: data,\n        type: ContentType.Json,\n        format: \"json\",\n        ...params,\n      }),\n\n    /**\n     * No description\n     *\n     * @tags Image Generation\n     * @name Txt2ImgInstantidFromUrlApiTxt2ImgInstantidGet\n     * @summary Txt2Img Instantid From Url\n     * @request GET:/api/txt2img/instantid\n     */\n    txt2ImgInstantidFromUrlApiTxt2ImgInstantidGet: (\n      query?: {\n        /**\n         * Prompt\n         * @default \"\"\n         */\n        prompt?: string;\n        /**\n         * Negative Prompt\n         * @default \"\"\n         */\n        negative_prompt?: string;\n        /**\n         * Width\n         * @default 768\n         */\n        width?: number;\n        /**\n         * Height\n         * @default 768\n         */\n        height?: number;\n        /**\n         * Guidance Scale\n         * @default 3\n         */\n        guidance_scale?: number;\n        /** Num Inference Steps */\n        num_inference_steps?: number;\n        /**\n         * Seed\n         * @default -1\n         */\n        seed?: number;\n        /**\n         * Model Index\n         * @default 0\n         */\n        model_index?: number;\n        /** Scheduler */\n        scheduler?: string;\n        /**\n         * Nsfw\n         * @default false\n         */\n        nsfw?: boolean;\n        /** Face Prompt */\n        face_prompt?: string;\n        /**\n         * Upscale\n         * @default 0\n         */\n        upscale?: number;\n        /**\n         * Strength\n         * @default 0.65\n         */\n        strength?: number;\n        /**\n         * Auto Lora\n         * @default true\n         */\n        auto_lora?: boolean;\n        /**\n         * Freeu\n         * @default false\n         */\n        freeu?: boolean;\n        /**\n         * Return Json\n         * @default false\n         */\n        return_json?: boolean;\n        /** Image */\n        image?: string;\n      },\n      params: RequestParams = {},\n    ) =>\n      this.request<any, HTTPValidationError>({\n        path: `/api/txt2img/instantid`,\n        method: \"GET\",\n        query: query,\n        format: \"json\",\n        ...params,\n      }),\n\n    /**\n     * No description\n     *\n     * @tags Image Generation\n     * @name Txt2ImgInstantidApiTxt2ImgInstantidPost\n     * @summary Txt2Img Instantid\n     * @request POST:/api/txt2img/instantid\n     */\n    txt2ImgInstantidApiTxt2ImgInstantidPost: (data: Txt2ImgRequest, params: RequestParams = {}) =>\n      this.request<any, HTTPValidationError>({\n        path: `/api/txt2img/instantid`,\n        method: \"POST\",\n        body: data,\n        type: ContentType.Json,\n        format: \"json\",\n        ...params,\n      }),\n\n    /**\n     * No description\n     *\n     * @tags Image Generation\n     * @name Txt2ImgCascadeFromUrlApiTxt2ImgCascadeGet\n     * @summary Txt2Img Cascade From Url\n     * @request GET:/api/txt2img/cascade\n     */\n    txt2ImgCascadeFromUrlApiTxt2ImgCascadeGet: (\n      query?: {\n        /**\n         * Prompt\n         * @default \"\"\n         */\n        prompt?: string;\n        /**\n         * Negative Prompt\n         * @default \"\"\n         */\n        negative_prompt?: string;\n        /**\n         * Width\n         * @default 768\n         */\n        width?: number;\n        /**\n         * Height\n         * @default 768\n         */\n        height?: number;\n        /**\n         * Guidance Scale\n         * @default 3\n         */\n        guidance_scale?: number;\n        /** Num Inference Steps */\n        num_inference_steps?: number;\n        /**\n         * Seed\n         * @default -1\n         */\n        seed?: number;\n        /**\n         * Model Index\n         * @default 0\n         */\n        model_index?: number;\n        /** Scheduler */\n        scheduler?: string;\n        /**\n         * Nsfw\n         * @default false\n         */\n        nsfw?: boolean;\n        /** Face Prompt */\n        face_prompt?: string;\n        /**\n         * Upscale\n         * @default 0\n         */\n        upscale?: number;\n        /**\n         * Strength\n         * @default 0.65\n         */\n        strength?: number;\n        /**\n         * Auto Lora\n         * @default true\n         */\n        auto_lora?: boolean;\n        /**\n         * Freeu\n         * @default false\n         */\n        freeu?: boolean;\n        /**\n         * Return Json\n         * @default false\n         */\n        return_json?: boolean;\n        /** Image */\n        image?: string;\n      },\n      params: RequestParams = {},\n    ) =>\n      this.request<any, HTTPValidationError>({\n        path: `/api/txt2img/cascade`,\n        method: \"GET\",\n        query: query,\n        format: \"json\",\n        ...params,\n      }),\n\n    /**\n     * No description\n     *\n     * @tags Image Generation\n     * @name Txt2ImgCascadeApiTxt2ImgCascadePost\n     * @summary Txt2Img Cascade\n     * @request POST:/api/txt2img/cascade\n     */\n    txt2ImgCascadeApiTxt2ImgCascadePost: (data: Txt2ImgRequest, params: RequestParams = {}) =>\n      this.request<any, HTTPValidationError>({\n        path: `/api/txt2img/cascade`,\n        method: \"POST\",\n        body: data,\n        type: ContentType.Json,\n        format: \"json\",\n        ...params,\n      }),\n\n    /**\n     * No description\n     *\n     * @tags Image Generation\n     * @name Txt2ImgFromUrlApiTxt2ImgControlnetGet\n     * @summary Txt2Img From Url\n     * @request GET:/api/txt2img/controlnet\n     */\n    txt2ImgFromUrlApiTxt2ImgControlnetGet: (\n      query?: {\n        /**\n         * Adapter\n         * @default \"canny\"\n         */\n        adapter?: \"canny\";\n        /**\n         * Prompt\n         * @default \"\"\n         */\n        prompt?: string;\n        /**\n         * Negative Prompt\n         * @default \"\"\n         */\n        negative_prompt?: string;\n        /**\n         * Width\n         * @default 768\n         */\n        width?: number;\n        /**\n         * Height\n         * @default 768\n         */\n        height?: number;\n        /**\n         * Guidance Scale\n         * @default 3\n         */\n        guidance_scale?: number;\n        /** Num Inference Steps */\n        num_inference_steps?: number;\n        /**\n         * Seed\n         * @default -1\n         */\n        seed?: number;\n        /**\n         * Model Index\n         * @default 0\n         */\n        model_index?: number;\n        /** Scheduler */\n        scheduler?: string;\n        /**\n         * Nsfw\n         * @default false\n         */\n        nsfw?: boolean;\n        /** Face Prompt */\n        face_prompt?: string;\n        /**\n         * Upscale\n         * @default 0\n         */\n        upscale?: number;\n        /**\n         * Strength\n         * @default 0.65\n         */\n        strength?: number;\n        /**\n         * Auto Lora\n         * @default true\n         */\n        auto_lora?: boolean;\n        /**\n         * Freeu\n         * @default false\n         */\n        freeu?: boolean;\n        /**\n         * Return Json\n         * @default false\n         */\n        return_json?: boolean;\n        /** Image */\n        image?: string;\n      },\n      params: RequestParams = {},\n    ) =>\n      this.request<void, HTTPValidationError>({\n        path: `/api/txt2img/controlnet`,\n        method: \"GET\",\n        query: query,\n        ...params,\n      }),\n\n    /**\n     * No description\n     *\n     * @tags Image Generation\n     * @name Txt2ImgApiTxt2ImgControlnetPost\n     * @summary Txt2Img\n     * @request POST:/api/txt2img/controlnet\n     */\n    txt2ImgApiTxt2ImgControlnetPost: (\n      data: Txt2ImgRequest,\n      query?: {\n        /**\n         * Adapter\n         * @default \"canny\"\n         */\n        adapter?: \"canny\";\n      },\n      params: RequestParams = {},\n    ) =>\n      this.request<void, HTTPValidationError>({\n        path: `/api/txt2img/controlnet`,\n        method: \"POST\",\n        query: query,\n        body: data,\n        type: ContentType.Json,\n        ...params,\n      }),\n\n    /**\n     * No description\n     *\n     * @tags Video Generation (text-to-video)\n     * @name Txt2VidGetApiTxt2VidAnimateGet\n     * @summary Txt2Vid Get\n     * @request GET:/api/txt2vid/animate\n     */\n    txt2VidGetApiTxt2VidAnimateGet: (\n      query?: {\n        /**\n         * Prompt\n         * @default \"\"\n         */\n        prompt?: string;\n        /**\n         * Negative Prompt\n         * @default \"\"\n         */\n        negative_prompt?: string;\n        /**\n         * Width\n         * @default 512\n         */\n        width?: number;\n        /**\n         * Height\n         * @default 512\n         */\n        height?: number;\n        /**\n         * Guidance Scale\n         * @default 2\n         */\n        guidance_scale?: number;\n        /**\n         * Num Frames\n         * @default 16\n         */\n        num_frames?: number;\n        /**\n         * Num Inference Steps\n         * @default 6\n         */\n        num_inference_steps?: number;\n        /**\n         * Fps\n         * @default 12\n         */\n        fps?: number;\n        /**\n         * Seed\n         * @default -1\n         */\n        seed?: number;\n        /**\n         * Interpolate Film\n         * @default 1\n         */\n        interpolate_film?: number;\n        /**\n         * Interpolate Rife\n         * @default 1\n         */\n        interpolate_rife?: number;\n        /**\n         * Fast Interpolate\n         * @default true\n         */\n        fast_interpolate?: boolean;\n        /** Audio */\n        audio?: string;\n      },\n      params: RequestParams = {},\n    ) =>\n      this.request<void, HTTPValidationError>({\n        path: `/api/txt2vid/animate`,\n        method: \"GET\",\n        query: query,\n        ...params,\n      }),\n\n    /**\n     * No description\n     *\n     * @tags Video Generation (text-to-video)\n     * @name Txt2VidApiTxt2VidAnimatePost\n     * @summary Txt2Vid\n     * @request POST:/api/txt2vid/animate\n     */\n    txt2VidApiTxt2VidAnimatePost: (data: Txt2VidRequest, params: RequestParams = {}) =>\n      this.request<void, HTTPValidationError>({\n        path: `/api/txt2vid/animate`,\n        method: \"POST\",\n        body: data,\n        type: ContentType.Json,\n        ...params,\n      }),\n\n    /**\n     * No description\n     *\n     * @tags Video Generation (text-to-video)\n     * @name Txt2VidGetApiTxt2VidZeroscopeGet\n     * @summary Txt2Vid Get\n     * @request GET:/api/txt2vid/zeroscope\n     */\n    txt2VidGetApiTxt2VidZeroscopeGet: (\n      query?: {\n        /**\n         * Prompt\n         * @default \"\"\n         */\n        prompt?: string;\n        /**\n         * Negative Prompt\n         * @default \"\"\n         */\n        negative_prompt?: string;\n        /**\n         * Width\n         * @default 512\n         */\n        width?: number;\n        /**\n         * Height\n         * @default 512\n         */\n        height?: number;\n        /**\n         * Guidance Scale\n         * @default 2\n         */\n        guidance_scale?: number;\n        /**\n         * Num Frames\n         * @default 16\n         */\n        num_frames?: number;\n        /**\n         * Num Inference Steps\n         * @default 6\n         */\n        num_inference_steps?: number;\n        /**\n         * Fps\n         * @default 12\n         */\n        fps?: number;\n        /**\n         * Seed\n         * @default -1\n         */\n        seed?: number;\n        /**\n         * Interpolate Film\n         * @default 1\n         */\n        interpolate_film?: number;\n        /**\n         * Interpolate Rife\n         * @default 1\n         */\n        interpolate_rife?: number;\n        /**\n         * Fast Interpolate\n         * @default true\n         */\n        fast_interpolate?: boolean;\n        /** Audio */\n        audio?: string;\n      },\n      params: RequestParams = {},\n    ) =>\n      this.request<any, HTTPValidationError>({\n        path: `/api/txt2vid/zeroscope`,\n        method: \"GET\",\n        query: query,\n        format: \"json\",\n        ...params,\n      }),\n\n    /**\n     * No description\n     *\n     * @tags Video Generation (text-to-video)\n     * @name Txt2VidApiTxt2VidZeroscopePost\n     * @summary Txt2Vid\n     * @request POST:/api/txt2vid/zeroscope\n     */\n    txt2VidApiTxt2VidZeroscopePost: (data: Txt2VidRequest, params: RequestParams = {}) =>\n      this.request<any, HTTPValidationError>({\n        path: `/api/txt2vid/zeroscope`,\n        method: \"POST\",\n        body: data,\n        type: ContentType.Json,\n        format: \"json\",\n        ...params,\n      }),\n\n    /**\n     * No description\n     *\n     * @name Img2VidFromUrlApiImg2VidXtGet\n     * @summary Img2Vid From Url\n     * @request GET:/api/img2vid/xt\n     */\n    img2VidFromUrlApiImg2VidXtGet: (\n      query?: {\n        /** Image */\n        image?: string;\n        /**\n         * Motion Bucket\n         * @default 31\n         */\n        motion_bucket?: number;\n        /**\n         * Num Inference Steps\n         * @default 6\n         */\n        num_inference_steps?: number;\n        /**\n         * Width\n         * @default 512\n         */\n        width?: number;\n        /**\n         * Height\n         * @default 512\n         */\n        height?: number;\n        /**\n         * Fps\n         * @default 12\n         */\n        fps?: number;\n        /**\n         * Num Frames\n         * @default 24\n         */\n        num_frames?: number;\n        /**\n         * Noise\n         * @default 0\n         */\n        noise?: number;\n        /**\n         * Interpolate Film\n         * @default 1\n         */\n        interpolate_film?: number;\n        /**\n         * Interpolate Rife\n         * @default false\n         */\n        interpolate_rife?: boolean;\n        /**\n         * Fast Interpolate\n         * @default true\n         */\n        fast_interpolate?: boolean;\n        /**\n         * Seed\n         * @default -1\n         */\n        seed?: number;\n        /** Audio */\n        audio?: string;\n      },\n      params: RequestParams = {},\n    ) =>\n      this.request<void, HTTPValidationError>({\n        path: `/api/img2vid/xt`,\n        method: \"GET\",\n        query: query,\n        ...params,\n      }),\n\n    /**\n     * No description\n     *\n     * @name Img2VidApiImg2VidXtPost\n     * @summary Img2Vid\n     * @request POST:/api/img2vid/xt\n     */\n    img2VidApiImg2VidXtPost: (data: Img2VidXTRequest, params: RequestParams = {}) =>\n      this.request<void, HTTPValidationError>({\n        path: `/api/img2vid/xt`,\n        method: \"POST\",\n        body: data,\n        type: ContentType.Json,\n        ...params,\n      }),\n\n    /**\n     * No description\n     *\n     * @tags Video Generation (text-to-video)\n     * @name Txt2VidFromUrlApiTxt2VidZeroGet\n     * @summary Txt2Vid From Url\n     * @request GET:/api/txt2vid/zero\n     */\n    txt2VidFromUrlApiTxt2VidZeroGet: (\n      query?: {\n        /**\n         * Prompt\n         * @default \"\"\n         */\n        prompt?: string;\n        /**\n         * Negative Prompt\n         * @default \"\"\n         */\n        negative_prompt?: string;\n        /**\n         * Width\n         * @default 512\n         */\n        width?: number;\n        /**\n         * Height\n         * @default 512\n         */\n        height?: number;\n        /**\n         * Guidance Scale\n         * @default 2\n         */\n        guidance_scale?: number;\n        /**\n         * Num Frames\n         * @default 16\n         */\n        num_frames?: number;\n        /**\n         * Num Inference Steps\n         * @default 6\n         */\n        num_inference_steps?: number;\n        /**\n         * Fps\n         * @default 12\n         */\n        fps?: number;\n        /**\n         * Seed\n         * @default -1\n         */\n        seed?: number;\n        /**\n         * Interpolate Film\n         * @default 1\n         */\n        interpolate_film?: number;\n        /**\n         * Interpolate Rife\n         * @default 1\n         */\n        interpolate_rife?: number;\n        /**\n         * Fast Interpolate\n         * @default true\n         */\n        fast_interpolate?: boolean;\n        /** Audio */\n        audio?: string;\n      },\n      params: RequestParams = {},\n    ) =>\n      this.request<any, HTTPValidationError>({\n        path: `/api/txt2vid/zero`,\n        method: \"GET\",\n        query: query,\n        format: \"json\",\n        ...params,\n      }),\n\n    /**\n     * No description\n     *\n     * @tags Video Generation (text-to-video)\n     * @name Txt2VidApiTxt2VidZeroPost\n     * @summary Txt2Vid\n     * @request POST:/api/txt2vid/zero\n     */\n    txt2VidApiTxt2VidZeroPost: (data: Txt2VidRequest, params: RequestParams = {}) =>\n      this.request<any, HTTPValidationError>({\n        path: `/api/txt2vid/zero`,\n        method: \"POST\",\n        body: data,\n        type: ContentType.Json,\n        format: \"json\",\n        ...params,\n      }),\n\n    /**\n     * No description\n     *\n     * @tags Image Processing\n     * @name DepthEstimationFromUrlApiImgDepthGet\n     * @summary Depth Estimation From Url\n     * @request GET:/api/img/depth\n     */\n    depthEstimationFromUrlApiImgDepthGet: (\n      query: {\n        /** Image */\n        image: string;\n        /**\n         * Median Filter\n         * @default 5\n         */\n        median_filter?: number;\n        /**\n         * Return Json\n         * @default false\n         */\n        return_json?: boolean;\n      },\n      params: RequestParams = {},\n    ) =>\n      this.request<any, HTTPValidationError>({\n        path: `/api/img/depth`,\n        method: \"GET\",\n        query: query,\n        format: \"json\",\n        ...params,\n      }),\n\n    /**\n     * No description\n     *\n     * @tags Image Processing\n     * @name DepthEstimationApiImgDepthPost\n     * @summary Depth Estimation\n     * @request POST:/api/img/depth\n     */\n    depthEstimationApiImgDepthPost: (data: DepthRequest, params: RequestParams = {}) =>\n      this.request<any, HTTPValidationError>({\n        path: `/api/img/depth`,\n        method: \"POST\",\n        body: data,\n        type: ContentType.Json,\n        format: \"json\",\n        ...params,\n      }),\n\n    /**\n     * No description\n     *\n     * @tags YouTube Tools\n     * @name DownloadYoutubeVideoFromUrlApiYoutubeDownloadGet\n     * @summary Download Youtube Video From Url\n     * @request GET:/api/youtube/download\n     */\n    downloadYoutubeVideoFromUrlApiYoutubeDownloadGet: (\n      query: {\n        /** Url */\n        url: string;\n        /**\n         * Audio Only\n         * @default false\n         */\n        audio_only?: boolean;\n        /**\n         * Start Time\n         * @default 0\n         */\n        start_time?: number;\n        /** Length */\n        length?: number;\n        /**\n         * Format\n         * @default \"mp4\"\n         */\n        format?: \"mp4\" | \"gif\";\n        /**\n         * Fps\n         * @default 10\n         */\n        fps?: number;\n        /** Text */\n        text?: string;\n        /** Width */\n        width?: number;\n      },\n      params: RequestParams = {},\n    ) =>\n      this.request<any, HTTPValidationError>({\n        path: `/api/youtube/download`,\n        method: \"GET\",\n        query: query,\n        format: \"json\",\n        ...params,\n      }),\n\n    /**\n     * No description\n     *\n     * @tags YouTube Tools\n     * @name DownloadYoutubeVideoApiYoutubeDownloadPost\n     * @summary Download Youtube Video\n     * @request POST:/api/youtube/download\n     */\n    downloadYoutubeVideoApiYoutubeDownloadPost: (data: YouTubeDownloadRequest, params: RequestParams = {}) =>\n      this.request<any, HTTPValidationError>({\n        path: `/api/youtube/download`,\n        method: \"POST\",\n        body: data,\n        type: ContentType.Json,\n        format: \"json\",\n        ...params,\n      }),\n\n    /**\n     * No description\n     *\n     * @tags YouTube Tools\n     * @name CaptionsFromUrlApiYoutubeCaptionsGet\n     * @summary Captions From Url\n     * @request GET:/api/youtube/captions\n     */\n    captionsFromUrlApiYoutubeCaptionsGet: (\n      query: {\n        /** Url */\n        url: string;\n        /**\n         * Prompt\n         * @default \"Your task is to give a concise summary (one to 3 sentences) of a YouTube video.\"\n         */\n        prompt?: string;\n        /**\n         * Summary\n         * @default false\n         */\n        summary?: boolean;\n        /**\n         * Max Response Tokens\n         * @default 3000\n         */\n        max_response_tokens?: number;\n      },\n      params: RequestParams = {},\n    ) =>\n      this.request<any, HTTPValidationError>({\n        path: `/api/youtube/captions`,\n        method: \"GET\",\n        query: query,\n        format: \"json\",\n        ...params,\n      }),\n\n    /**\n     * No description\n     *\n     * @tags YouTube Tools\n     * @name CaptionsApiYoutubeCaptionsPost\n     * @summary Captions\n     * @request POST:/api/youtube/captions\n     */\n    captionsApiYoutubeCaptionsPost: (data: YouTubeCaptionsRequest, params: RequestParams = {}) =>\n      this.request<any, HTTPValidationError>({\n        path: `/api/youtube/captions`,\n        method: \"POST\",\n        body: data,\n        type: ContentType.Json,\n        format: \"json\",\n        ...params,\n      }),\n\n    /**\n     * No description\n     *\n     * @tags YouTube Tools\n     * @name YoutubeGridFromUrlApiYoutubeGridGet\n     * @summary Youtube Grid From Url\n     * @request GET:/api/youtube/grid\n     */\n    youtubeGridFromUrlApiYoutubeGridGet: (\n      query: {\n        /** Url */\n        url: string;\n        /**\n         * Rows\n         * @default 3\n         */\n        rows?: number;\n        /**\n         * Cols\n         * @default 3\n         */\n        cols?: number;\n      },\n      params: RequestParams = {},\n    ) =>\n      this.request<any, HTTPValidationError>({\n        path: `/api/youtube/grid`,\n        method: \"GET\",\n        query: query,\n        format: \"json\",\n        ...params,\n      }),\n\n    /**\n     * No description\n     *\n     * @tags YouTube Tools\n     * @name YoutubeGridApiYoutubeGridPost\n     * @summary Youtube Grid\n     * @request POST:/api/youtube/grid\n     */\n    youtubeGridApiYoutubeGridPost: (data: YouTubeGridRequest, params: RequestParams = {}) =>\n      this.request<any, HTTPValidationError>({\n        path: `/api/youtube/grid`,\n        method: \"POST\",\n        body: data,\n        type: ContentType.Json,\n        format: \"json\",\n        ...params,\n      }),\n\n    /**\n     * No description\n     *\n     * @tags YouTube Tools\n     * @name YoutubeFramesFromUrlApiYoutubeFramesGet\n     * @summary Youtube Frames From Url\n     * @request GET:/api/youtube/frames\n     */\n    youtubeFramesFromUrlApiYoutubeFramesGet: (\n      query: {\n        /** Url */\n        url: string;\n        /**\n         * Num Frames\n         * @default 10\n         */\n        num_frames?: number;\n        /**\n         * Trim Start\n         * @default 2\n         */\n        trim_start?: number;\n        /**\n         * Trim End\n         * @default 2\n         */\n        trim_end?: number;\n        /**\n         * Summary\n         * @default false\n         */\n        summary?: boolean;\n        /**\n         * Captions\n         * @default false\n         */\n        captions?: boolean;\n      },\n      params: RequestParams = {},\n    ) =>\n      this.request<any, HTTPValidationError>({\n        path: `/api/youtube/frames`,\n        method: \"GET\",\n        query: query,\n        format: \"json\",\n        ...params,\n      }),\n\n    /**\n     * No description\n     *\n     * @tags YouTube Tools\n     * @name YoutubeFramesApiYoutubeFramesPost\n     * @summary Youtube Frames\n     * @request POST:/api/youtube/frames\n     */\n    youtubeFramesApiYoutubeFramesPost: (data: YouTubeFramesRequest, params: RequestParams = {}) =>\n      this.request<any, HTTPValidationError>({\n        path: `/api/youtube/frames`,\n        method: \"POST\",\n        body: data,\n        type: ContentType.Json,\n        format: \"json\",\n        ...params,\n      }),\n\n    /**\n     * No description\n     *\n     * @tags Video Generation\n     * @name Vid2VidFromUrlApiVid2VidGet\n     * @summary Vid2Vid From Url\n     * @request GET:/api/vid2vid\n     */\n    vid2VidFromUrlApiVid2VidGet: (\n      query: {\n        /** Video */\n        video: string;\n        /** Prompt */\n        prompt: string;\n        /**\n         * Negative Prompt\n         * @default \"\"\n         */\n        negative_prompt?: string;\n        /**\n         * Seed\n         * @default -1\n         */\n        seed?: number;\n        /**\n         * Rows\n         * @default 2\n         */\n        rows?: number;\n        /**\n         * Cols\n         * @default 2\n         */\n        cols?: number;\n      },\n      params: RequestParams = {},\n    ) =>\n      this.request<any, HTTPValidationError>({\n        path: `/api/vid2vid`,\n        method: \"GET\",\n        query: query,\n        format: \"json\",\n        ...params,\n      }),\n\n    /**\n     * No description\n     *\n     * @tags Video Generation\n     * @name Vid2VidApiVid2VidPost\n     * @summary Vid2Vid\n     * @request POST:/api/vid2vid\n     */\n    vid2VidApiVid2VidPost: (data: Vid2VidRequest, params: RequestParams = {}) =>\n      this.request<any, HTTPValidationError>({\n        path: `/api/vid2vid`,\n        method: \"POST\",\n        body: data,\n        type: ContentType.Json,\n        format: \"json\",\n        ...params,\n      }),\n\n    /**\n     * No description\n     *\n     * @tags Image Processing\n     * @name DepthEstimationFromUrlApiImgDepthMidasGet\n     * @summary Depth Estimation From Url\n     * @request GET:/api/img/depth/midas\n     */\n    depthEstimationFromUrlApiImgDepthMidasGet: (\n      query: {\n        /** Image */\n        image: string;\n        /**\n         * Median Filter\n         * @default 5\n         */\n        median_filter?: number;\n        /**\n         * Return Json\n         * @default false\n         */\n        return_json?: boolean;\n      },\n      params: RequestParams = {},\n    ) =>\n      this.request<void, HTTPValidationError>({\n        path: `/api/img/depth/midas`,\n        method: \"GET\",\n        query: query,\n        ...params,\n      }),\n\n    /**\n     * @description API route for depth detection\n     *\n     * @tags Image Processing\n     * @name DepthEstimationApiImgDepthMidasPost\n     * @summary Depth Estimation\n     * @request POST:/api/img/depth/midas\n     */\n    depthEstimationApiImgDepthMidasPost: (data: DepthRequest, params: RequestParams = {}) =>\n      this.request<void, HTTPValidationError>({\n        path: `/api/img/depth/midas`,\n        method: \"POST\",\n        body: data,\n        type: ContentType.Json,\n        ...params,\n      }),\n\n    /**\n     * No description\n     *\n     * @name DetectFromUrlApiDetectYolosGet\n     * @summary Detect From Url\n     * @request GET:/api/detect/yolos\n     */\n    detectFromUrlApiDetectYolosGet: (\n      query: {\n        /** Image */\n        image: string;\n        /**\n         * Threshold\n         * @default 0.8\n         */\n        threshold?: number;\n        /**\n         * Return Image\n         * @default false\n         */\n        return_image?: boolean;\n      },\n      params: RequestParams = {},\n    ) =>\n      this.request<any, HTTPValidationError>({\n        path: `/api/detect/yolos`,\n        method: \"GET\",\n        query: query,\n        format: \"json\",\n        ...params,\n      }),\n\n    /**\n     * No description\n     *\n     * @name DetectYolosApiDetectYolosPost\n     * @summary Detect Yolos\n     * @request POST:/api/detect/yolos\n     */\n    detectYolosApiDetectYolosPost: (data: DetectRequest, params: RequestParams = {}) =>\n      this.request<any, HTTPValidationError>({\n        path: `/api/detect/yolos`,\n        method: \"POST\",\n        body: data,\n        type: ContentType.Json,\n        format: \"json\",\n        ...params,\n      }),\n\n    /**\n     * No description\n     *\n     * @tags 3D Model Generation\n     * @name ShapeGetApiTxt2ModelShapeGet\n     * @summary Shape Get\n     * @request GET:/api/txt2model/shape\n     */\n    shapeGetApiTxt2ModelShapeGet: (data: Txt2ModelShapERequest, params: RequestParams = {}) =>\n      this.request<any, HTTPValidationError>({\n        path: `/api/txt2model/shape`,\n        method: \"GET\",\n        body: data,\n        type: ContentType.Json,\n        format: \"json\",\n        ...params,\n      }),\n\n    /**\n     * No description\n     *\n     * @tags 3D Model Generation\n     * @name ShapeApiTxt2ModelShapePost\n     * @summary Shape\n     * @request POST:/api/txt2model/shape\n     */\n    shapeApiTxt2ModelShapePost: (data: Txt2ModelShapERequest, params: RequestParams = {}) =>\n      this.request<any, HTTPValidationError>({\n        path: `/api/txt2model/shape`,\n        method: \"POST\",\n        body: data,\n        type: ContentType.Json,\n        format: \"json\",\n        ...params,\n      }),\n\n    /**\n     * No description\n     *\n     * @tags 3D Model Generation\n     * @name Img2ModelFromUrlApiImg2ModelLgmGet\n     * @summary Img2Model From Url\n     * @request GET:/api/img2model/lgm\n     */\n    img2ModelFromUrlApiImg2ModelLgmGet: (\n      query: {\n        /** Image */\n        image: string;\n        /**\n         * Num Inference Steps\n         * @default 40\n         */\n        num_inference_steps?: number;\n        /**\n         * Guidance Scale\n         * @default 3\n         */\n        guidance_scale?: number;\n        /**\n         * Negative Prompt\n         * @default \"\"\n         */\n        negative_prompt?: string;\n        /**\n         * Format\n         * @default \"ply\"\n         */\n        format?: \"glb\" | \"ply\";\n      },\n      params: RequestParams = {},\n    ) =>\n      this.request<void, HTTPValidationError>({\n        path: `/api/img2model/lgm`,\n        method: \"GET\",\n        query: query,\n        ...params,\n      }),\n\n    /**\n     * No description\n     *\n     * @tags 3D Model Generation\n     * @name Img2ModelApiImg2ModelLgmPost\n     * @summary Img2Model\n     * @request POST:/api/img2model/lgm\n     */\n    img2ModelApiImg2ModelLgmPost: (data: Img2ModelLGMRequest, params: RequestParams = {}) =>\n      this.request<void, HTTPValidationError>({\n        path: `/api/img2model/lgm`,\n        method: \"POST\",\n        body: data,\n        type: ContentType.Json,\n        ...params,\n      }),\n\n    /**\n     * No description\n     *\n     * @tags 3D Model Generation\n     * @name Img2ModelFromUrlApiImg2ModelTsrGet\n     * @summary Img2Model From Url\n     * @request GET:/api/img2model/tsr\n     */\n    img2ModelFromUrlApiImg2ModelTsrGet: (\n      query: {\n        /** Image */\n        image: string;\n        /**\n         * Format\n         * @default \"glb\"\n         */\n        format?: \"glb\" | \"obj\";\n        /**\n         * Foreground Ratio\n         * @default [0.85]\n         */\n        foreground_ratio?: number;\n      },\n      params: RequestParams = {},\n    ) =>\n      this.request<void, HTTPValidationError>({\n        path: `/api/img2model/tsr`,\n        method: \"GET\",\n        query: query,\n        ...params,\n      }),\n\n    /**\n     * No description\n     *\n     * @tags 3D Model Generation\n     * @name Img2ModelApiImg2ModelTsrPost\n     * @summary Img2Model\n     * @request POST:/api/img2model/tsr\n     */\n    img2ModelApiImg2ModelTsrPost: (data: Img2ModelTSRRequest, params: RequestParams = {}) =>\n      this.request<void, HTTPValidationError>({\n        path: `/api/img2model/tsr`,\n        method: \"POST\",\n        body: data,\n        type: ContentType.Json,\n        ...params,\n      }),\n\n    /**\n     * No description\n     *\n     * @name RemoveBackgroundApiRembgPost\n     * @summary Remove Background\n     * @request POST:/api/rembg\n     */\n    removeBackgroundApiRembgPost: (data: RembgRequest, params: RequestParams = {}) =>\n      this.request<any, HTTPValidationError>({\n        path: `/api/rembg`,\n        method: \"POST\",\n        body: data,\n        type: ContentType.Json,\n        format: \"json\",\n        ...params,\n      }),\n\n    /**\n     * No description\n     *\n     * @name VisionFromUrlApiVisionGet\n     * @summary Vision From Url\n     * @request GET:/api/vision\n     */\n    visionFromUrlApiVisionGet: (\n      query: {\n        /** Image */\n        image: string;\n        /**\n         * Prompt\n         * @default \"Describe the image in a few words.\"\n         */\n        prompt?: string;\n        /**\n         * Seed\n         * @default -1\n         */\n        seed?: number;\n      },\n      params: RequestParams = {},\n    ) =>\n      this.request<any, HTTPValidationError>({\n        path: `/api/vision`,\n        method: \"GET\",\n        query: query,\n        format: \"json\",\n        ...params,\n      }),\n\n    /**\n     * No description\n     *\n     * @name VisionApiVisionPost\n     * @summary Vision\n     * @request POST:/api/vision\n     */\n    visionApiVisionPost: (data: VisionRequest, params: RequestParams = {}) =>\n      this.request<any, HTTPValidationError>({\n        path: `/api/vision`,\n        method: \"POST\",\n        body: data,\n        type: ContentType.Json,\n        format: \"json\",\n        ...params,\n      }),\n\n    /**\n     * No description\n     *\n     * @tags Image-to-Text\n     * @name Img2TxtFromUrlApiImg2TxtLlavaGet\n     * @summary Img2Txt From Url\n     * @request GET:/api/img2txt/llava\n     */\n    img2TxtFromUrlApiImg2TxtLlavaGet: (\n      data: object[],\n      query?: {\n        /**\n         * Prompt\n         * @default \"Describe the image.\"\n         */\n        prompt?: string;\n        /** Image */\n        image?: string;\n      },\n      params: RequestParams = {},\n    ) =>\n      this.request<any, HTTPValidationError>({\n        path: `/api/img2txt/llava`,\n        method: \"GET\",\n        query: query,\n        body: data,\n        type: ContentType.Json,\n        format: \"json\",\n        ...params,\n      }),\n\n    /**\n     * No description\n     *\n     * @tags Image-to-Text\n     * @name Img2TxtApiImg2TxtLlavaPost\n     * @summary Img2Txt\n     * @request POST:/api/img2txt/llava\n     */\n    img2TxtApiImg2TxtLlavaPost: (data: Img2TxtRequest, params: RequestParams = {}) =>\n      this.request<any, HTTPValidationError>({\n        path: `/api/img2txt/llava`,\n        method: \"POST\",\n        body: data,\n        type: ContentType.Json,\n        format: \"json\",\n        ...params,\n      }),\n\n    /**\n     * No description\n     *\n     * @name MusicgenGetApiMusicgenGet\n     * @summary Musicgen Get\n     * @request GET:/api/musicgen\n     */\n    musicgenGetApiMusicgenGet: (\n      query: {\n        /** Prompt */\n        prompt: string;\n        /**\n         * Duration\n         * @default 10\n         */\n        duration?: number;\n        /**\n         * Temperature\n         * @default 0.9\n         */\n        temperature?: number;\n        /**\n         * Guidance Scale\n         * @default 6.5\n         */\n        guidance_scale?: number;\n        /**\n         * Format\n         * @default \"wav\"\n         */\n        format?: string;\n        /**\n         * Seed\n         * @default -1\n         */\n        seed?: number;\n        /**\n         * Top P\n         * @default 0.95\n         */\n        top_p?: number;\n        /**\n         * Streaming\n         * @default false\n         */\n        streaming?: boolean;\n        /** Wav Bytes */\n        wav_bytes?: string;\n      },\n      params: RequestParams = {},\n    ) =>\n      this.request<void, HTTPValidationError>({\n        path: `/api/musicgen`,\n        method: \"GET\",\n        query: query,\n        ...params,\n      }),\n\n    /**\n     * No description\n     *\n     * @name MusicgenApiMusicgenPost\n     * @summary Musicgen\n     * @request POST:/api/musicgen\n     */\n    musicgenApiMusicgenPost: (data: MusicGenRequest, params: RequestParams = {}) =>\n      this.request<void, HTTPValidationError>({\n        path: `/api/musicgen`,\n        method: \"POST\",\n        body: data,\n        type: ContentType.Json,\n        ...params,\n      }),\n\n    /**\n     * No description\n     *\n     * @name ChatCompletionsApiChatCompletionsPost\n     * @summary Chat Completions\n     * @request POST:/api/chat/completions\n     */\n    chatCompletionsApiChatCompletionsPost: (data: ChatCompletionRequest, params: RequestParams = {}) =>\n      this.request<any, HTTPValidationError>({\n        path: `/api/chat/completions`,\n        method: \"POST\",\n        body: data,\n        type: ContentType.Json,\n        format: \"json\",\n        ...params,\n      }),\n\n    /**\n     * No description\n     *\n     * @name ChatStreamingPostApiChatStreamPost\n     * @summary Chat Streaming Post\n     * @request POST:/api/chat/stream\n     */\n    chatStreamingPostApiChatStreamPost: (data: ChatCompletionRequest, params: RequestParams = {}) =>\n      this.request<void, HTTPValidationError>({\n        path: `/api/chat/stream`,\n        method: \"POST\",\n        body: data,\n        type: ContentType.Json,\n        ...params,\n      }),\n\n    /**\n     * No description\n     *\n     * @tags Image Generation\n     * @name Txt2ModelAvatarApiTxt2ModelAvatarPost\n     * @summary Txt2Model Avatar\n     * @request POST:/api/txt2model/avatar\n     */\n    txt2ModelAvatarApiTxt2ModelAvatarPost: (data: Txt2ModelAvatarRequest, params: RequestParams = {}) =>\n      this.request<any, HTTPValidationError>({\n        path: `/api/txt2model/avatar`,\n        method: \"POST\",\n        body: data,\n        type: ContentType.Json,\n        format: \"json\",\n        ...params,\n      }),\n\n    /**\n     * No description\n     *\n     * @tags Image Generation\n     * @name Txt2ModelAvatarGenerateApiTxt2ModelAvatarGeneratePost\n     * @summary Txt2Model Avatar Generate\n     * @request POST:/api/txt2model/avatar/generate\n     */\n    txt2ModelAvatarGenerateApiTxt2ModelAvatarGeneratePost: (\n      query: {\n        /** Prompt */\n        prompt: string;\n        /**\n         * Negative Prompt\n         * @default \"\"\n         */\n        negative_prompt?: string;\n      },\n      params: RequestParams = {},\n    ) =>\n      this.request<any, HTTPValidationError>({\n        path: `/api/txt2model/avatar/generate`,\n        method: \"POST\",\n        query: query,\n        format: \"json\",\n        ...params,\n      }),\n\n    /**\n     * No description\n     *\n     * @tags Text-to-Speech (TTS)\n     * @name TtsGetApiTtsGet\n     * @summary Tts Get\n     * @request GET:/api/tts\n     */\n    ttsGetApiTtsGet: (\n      query: {\n        /** Text */\n        text: string;\n        /**\n         * Language\n         * @default \"en\"\n         */\n        language?: string;\n        /**\n         * Voice\n         * @default \"female1\"\n         */\n        voice?: string;\n        /**\n         * Temperature\n         * @default 0.75\n         */\n        temperature?: number;\n        /**\n         * Speed\n         * @default 1\n         */\n        speed?: number;\n      },\n      params: RequestParams = {},\n    ) =>\n      this.request<void, HTTPValidationError>({\n        path: `/api/tts`,\n        method: \"GET\",\n        query: query,\n        ...params,\n      }),\n\n    /**\n     * No description\n     *\n     * @tags Text-to-Speech (TTS)\n     * @name TtsApiTtsPost\n     * @summary Tts\n     * @request POST:/api/tts\n     */\n    ttsApiTtsPost: (data: TTSRequest, params: RequestParams = {}) =>\n      this.request<void, HTTPValidationError>({\n        path: `/api/tts`,\n        method: \"POST\",\n        body: data,\n        type: ContentType.Json,\n        ...params,\n      }),\n\n    /**\n     * No description\n     *\n     * @tags Text Generation\n     * @name TxtSummaryFromUrlApiTxtSummaryGet\n     * @summary Txt Summary From Url\n     * @request GET:/api/txt/summary\n     */\n    txtSummaryFromUrlApiTxtSummaryGet: (\n      query: {\n        /** Url */\n        url: string;\n        /**\n         * Prompt\n         * @default \"Summarize the following text scraped from the web.\"\n         */\n        prompt?: string;\n        /**\n         * Max Response Tokens\n         * @default 200\n         */\n        max_response_tokens?: number;\n      },\n      params: RequestParams = {},\n    ) =>\n      this.request<any, HTTPValidationError>({\n        path: `/api/txt/summary`,\n        method: \"GET\",\n        query: query,\n        format: \"json\",\n        ...params,\n      }),\n\n    /**\n     * No description\n     *\n     * @tags Text Generation\n     * @name TxtSummaryApiTxtSummaryPost\n     * @summary Txt Summary\n     * @request POST:/api/txt/summary\n     */\n    txtSummaryApiTxtSummaryPost: (data: SummaryRequest, params: RequestParams = {}) =>\n      this.request<any, HTTPValidationError>({\n        path: `/api/txt/summary`,\n        method: \"POST\",\n        body: data,\n        type: ContentType.Json,\n        format: \"json\",\n        ...params,\n      }),\n\n    /**\n     * No description\n     *\n     * @tags Text Generation\n     * @name PersonalityGetApiTxtProfileGet\n     * @summary Personality Get\n     * @request GET:/api/txt/profile\n     */\n    personalityGetApiTxtProfileGet: (\n      query?: {\n        /**\n         * Min Age\n         * @default 18\n         */\n        min_age?: number;\n        /**\n         * Max Age\n         * @default 80\n         */\n        max_age?: number;\n        /**\n         * Gender\n         * @default \"random\"\n         */\n        gender?: \"random\" | \"male\" | \"female\";\n        /**\n         * Description\n         * @default \"\"\n         */\n        description?: string;\n      },\n      params: RequestParams = {},\n    ) =>\n      this.request<any, HTTPValidationError>({\n        path: `/api/txt/profile`,\n        method: \"GET\",\n        query: query,\n        format: \"json\",\n        ...params,\n      }),\n\n    /**\n     * No description\n     *\n     * @tags Text Generation\n     * @name GeneratePersonalityApiTxtProfilePost\n     * @summary Generate Personality\n     * @request POST:/api/txt/profile\n     */\n    generatePersonalityApiTxtProfilePost: (data: TxtPersonalityRequest, params: RequestParams = {}) =>\n      this.request<any, HTTPValidationError>({\n        path: `/api/txt/profile`,\n        method: \"POST\",\n        body: data,\n        type: ContentType.Json,\n        format: \"json\",\n        ...params,\n      }),\n\n    /**\n     * No description\n     *\n     * @tags PDF\n     * @name PdfRipApiPdfRipPost\n     * @summary Pdf Rip\n     * @request POST:/api/pdf/rip\n     */\n    pdfRipApiPdfRipPost: (\n      query: {\n        /** Pages */\n        pages: string;\n      },\n      data: BodyPdfRipApiPdfRipPost,\n      params: RequestParams = {},\n    ) =>\n      this.request<any, HTTPValidationError>({\n        path: `/api/pdf/rip`,\n        method: \"POST\",\n        query: query,\n        body: data,\n        type: ContentType.FormData,\n        format: \"json\",\n        ...params,\n      }),\n\n    /**\n     * No description\n     *\n     * @name GoogleTrendsApiGoogleTrendsGet\n     * @summary Google Trends\n     * @request GET:/api/google/trends\n     */\n    googleTrendsApiGoogleTrendsGet: (params: RequestParams = {}) =>\n      this.request<any, any>({\n        path: `/api/google/trends`,\n        method: \"GET\",\n        format: \"json\",\n        ...params,\n      }),\n  };\n}\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","ContentType","apiConfig","baseUrl","securityData","abortControllers","Map","customFetch","fetch","fetchParams","baseApiParams","credentials","headers","redirect","referrerPolicy","setSecurityData","data","contentFormatters","Json","input","JSON","stringify","Text","FormData","keys","reduce","formData","property","append","Blob","UrlEncoded","toQueryString","createAbortSignal","cancelToken","has","signal","abortController","AbortController","set","abortRequest","abort","delete","request","body","secure","path","type","query","format","params","this","securityWorker","secureParams","requestParams","mergeRequestParams","queryString","payloadFormatter","responseFormat","then","response","r","error","ok","catch","e","assign","encodeQueryParam","encodedKey","encodeURIComponent","addQueryParam","addArrayQueryParam","map","v","join","rawQuery","filter","Array","isArray","addQueryParams","params1","params2","api","cannyFromUrlApiImgCannyGet","method","cannyApiImgCannyPost","txt2ImgGetApiTxt2ImgGet","txt2ImgApiTxt2ImgPost","img2ImgFromUrlApiImg2ImgGet","img2ImgApiImg2ImgPost","inpaintFromUrlApiInpaintGet","inpaintApiInpaintPost","txt2ImgFromUrlApiTxt2ImgCannyGet","txt2ImgApiTxt2ImgCannyPost","txt2ImgFromUrlApiTxt2ImgDepthGet","txt2ImgApiTxt2ImgDepthPost","txt2ImgInstantidFromUrlApiTxt2ImgInstantidGet","txt2ImgInstantidApiTxt2ImgInstantidPost","txt2ImgCascadeFromUrlApiTxt2ImgCascadeGet","txt2ImgCascadeApiTxt2ImgCascadePost","txt2ImgFromUrlApiTxt2ImgControlnetGet","txt2ImgApiTxt2ImgControlnetPost","txt2VidGetApiTxt2VidAnimateGet","txt2VidApiTxt2VidAnimatePost","txt2VidGetApiTxt2VidZeroscopeGet","txt2VidApiTxt2VidZeroscopePost","img2VidFromUrlApiImg2VidXtGet","img2VidApiImg2VidXtPost","txt2VidFromUrlApiTxt2VidZeroGet","txt2VidApiTxt2VidZeroPost","depthEstimationFromUrlApiImgDepthGet","depthEstimationApiImgDepthPost","downloadYoutubeVideoFromUrlApiYoutubeDownloadGet","downloadYoutubeVideoApiYoutubeDownloadPost","captionsFromUrlApiYoutubeCaptionsGet","captionsApiYoutubeCaptionsPost","youtubeGridFromUrlApiYoutubeGridGet","youtubeGridApiYoutubeGridPost","youtubeFramesFromUrlApiYoutubeFramesGet","youtubeFramesApiYoutubeFramesPost","vid2VidFromUrlApiVid2VidGet","vid2VidApiVid2VidPost","depthEstimationFromUrlApiImgDepthMidasGet","depthEstimationApiImgDepthMidasPost","detectFromUrlApiDetectYolosGet","detectYolosApiDetectYolosPost","shapeGetApiTxt2ModelShapeGet","shapeApiTxt2ModelShapePost","img2ModelFromUrlApiImg2ModelLgmGet","img2ModelApiImg2ModelLgmPost","img2ModelFromUrlApiImg2ModelTsrGet","img2ModelApiImg2ModelTsrPost","removeBackgroundApiRembgPost","visionFromUrlApiVisionGet","visionApiVisionPost","img2TxtFromUrlApiImg2TxtLlavaGet","img2TxtApiImg2TxtLlavaPost","musicgenGetApiMusicgenGet","musicgenApiMusicgenPost","chatCompletionsApiChatCompletionsPost","chatStreamingPostApiChatStreamPost","txt2ModelAvatarApiTxt2ModelAvatarPost","txt2ModelAvatarGenerateApiTxt2ModelAvatarGeneratePost","ttsGetApiTtsGet","ttsApiTtsPost","txtSummaryFromUrlApiTxtSummaryGet","txtSummaryApiTxtSummaryPost","personalityGetApiTxtProfileGet","generatePersonalityApiTxtProfilePost","pdfRipApiPdfRipPost","googleTrendsApiGoogleTrendsGet","HttpClient"],"sourceRoot":""}