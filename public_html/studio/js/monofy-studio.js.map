{"version":3,"file":"monofy-studio.js","mappings":"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","sources":["webpack://monofy/webpack/bootstrap","webpack://monofy/webpack/runtime/make namespace object","webpack://monofy/../elements/src/managers/AudioManager.ts","webpack://monofy/../elements/src/constants/audioConstants.ts","webpack://monofy/../elements/src/elements/Composition.ts","webpack://monofy/../elements/src/elements/AudioCanvas.ts","webpack://monofy/../elements/src/elements/audioDialogs.ts","webpack://monofy/../elements/src/elements/Grid.ts","webpack://monofy/../elements/src/elements/SideKeyboard.ts","webpack://monofy/../elements/src/elements/PianoRoll.ts","webpack://monofy/../elements/src/EventObject.ts","webpack://monofy/./src/index.ts","webpack://monofy/../elements/src/elements/AudioClock.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","let audioContext: AudioContext | null = null;\r\n\r\nexport function getAudioContext() {\r\n  if (!audioContext) {\r\n    const AudioContext =\r\n      window.AudioContext || (window as any).webkitAudioContext;\r\n    audioContext = new AudioContext();\r\n\r\n    console.log(\"Audio context created\");\r\n\r\n    // force audio context to start\r\n    const buffer = audioContext.createBuffer(1, 1, audioContext.sampleRate);\r\n    const source = audioContext.createBufferSource();\r\n    source.buffer = buffer;\r\n    source.connect(audioContext.destination);\r\n    source.start(0);\r\n  }\r\n  return audioContext;\r\n}\r\n","export const DEFAULT_NOTE_HEIGHT = 20;\r\n\r\nexport const KEY_COLORS = [\r\n  \"white\",\r\n  \"black\",\r\n  \"white\",\r\n  \"white\",\r\n  \"black\",\r\n  \"white\",\r\n  \"black\",\r\n  \"white\",\r\n  \"white\",\r\n  \"black\",\r\n  \"white\",\r\n  \"black\",\r\n];\r\n\r\nexport const NOTE_NAMES = [\r\n  \"A\",\r\n  \"A#\",\r\n  \"B\",\r\n  \"C\",\r\n  \"C#\",\r\n  \"D\",\r\n  \"D#\",\r\n  \"E\",\r\n  \"F\",\r\n  \"F#\",\r\n  \"G\",\r\n  \"G#\",\r\n];\r\n","import { GridItem } from \"./Grid\";\r\n\r\nexport class Composition {\r\n  title: string;\r\n  description: string;\r\n  tempo: number;\r\n  events: GridItem[] = [];\r\n\r\n  constructor() {\r\n    this.title = \"Untitled\";\r\n    this.description = \"No description\";\r\n    this.tempo = 120;\r\n  }\r\n}\r\n","import { getAudioContext } from \"../managers/AudioManager\";\r\nimport { GridItem } from \"./Grid\";\r\n\r\nexport class AudioCanvas {\r\n  domElement: HTMLDivElement;\r\n  canvas: HTMLCanvasElement;\r\n  ctx: CanvasRenderingContext2D;\r\n  buffer: AudioBuffer | null = null;\r\n\r\n  constructor() {\r\n    this.domElement = document.createElement(\"div\");\r\n    this.domElement.classList.add(\"audio-canvas\");\r\n\r\n    this.canvas = document.createElement(\"canvas\");\r\n    this.canvas.width = 800;\r\n    this.canvas.height = 200;\r\n    this.domElement.appendChild(this.canvas);\r\n\r\n    this.canvas.addEventListener(\"click\", () => {\r\n      if (this.buffer) {\r\n        this.playBuffer(this.buffer);\r\n      }\r\n    });\r\n\r\n    this.ctx = this.canvas.getContext(\"2d\") as CanvasRenderingContext2D;\r\n  }\r\n\r\n  async generateAudio(\r\n    note: GridItem,\r\n    preview: boolean = false\r\n  ): Promise<AudioBuffer> {\r\n    const buffer: AudioBuffer = await new Promise((resolve, reject) => {\r\n      const req = {\r\n        text: note.label,\r\n      };\r\n      fetch(\"/api/tts/edge\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify(req),\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n      })\r\n        .then((res) => res.arrayBuffer())\r\n        .then((data) => {\r\n          console.log(\"Audio buffer downloaded\", data);\r\n          getAudioContext().decodeAudioData(\r\n            data,\r\n            (audioBuffer: AudioBuffer) => {\r\n              this.buffer = audioBuffer;\r\n              if (preview) {\r\n                this.playBuffer(audioBuffer);\r\n              }\r\n\r\n              resolve(audioBuffer);\r\n            }\r\n          );\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error downloading audio buffer\", error);\r\n          reject(error);\r\n        });\r\n    });\r\n\r\n    this.loadBuffer(buffer);\r\n\r\n    return buffer;\r\n  }\r\n\r\n  playBuffer(audioBuffer: AudioBuffer) {\r\n    const ctx = getAudioContext();\r\n    const source = ctx.createBufferSource();\r\n    source.buffer = audioBuffer;\r\n    source.connect(ctx.destination);\r\n    source.start();\r\n  }\r\n\r\n  loadBuffer(audioBuffer: AudioBuffer) {\r\n    this.buffer = audioBuffer;\r\n\r\n    const channelData = audioBuffer.getChannelData(0);\r\n    const bufferLength = channelData.length;\r\n    const sliceWidth = this.canvas.width / bufferLength;\r\n\r\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n    this.ctx.beginPath();\r\n    this.ctx.moveTo(0, this.canvas.height / 2);\r\n\r\n    for (let i = 0; i < bufferLength; i++) {\r\n      const x = i * sliceWidth;\r\n      const y = ((channelData[i] + 1) * this.canvas.height) / 2;\r\n\r\n      this.ctx.lineTo(x, y);\r\n    }\r\n\r\n    this.ctx.lineTo(this.canvas.width, this.canvas.height / 2);\r\n    this.ctx.stroke();\r\n  }\r\n}\r\n","import { AudioCanvas } from \"./AudioCanvas\";\r\nimport { GridItem } from \"./Grid\";\r\n\r\nexport class PianoRollDialog {\r\n  domElement: HTMLDivElement;\r\n  closeButton: HTMLButtonElement;\r\n  saveButton: HTMLButtonElement;\r\n  note: GridItem | null = null;\r\n\r\n  constructor(public onsave: (note: GridItem) => void) {\r\n    this.domElement = document.createElement(\"div\");\r\n    this.domElement.classList.add(\"piano-roll-dialog\");\r\n\r\n    this.closeButton = document.createElement(\"button\");\r\n    this.closeButton.textContent = \"X\";\r\n    this.domElement.appendChild(this.closeButton);\r\n    this.closeButton.addEventListener(\"click\", () => {\r\n      this.domElement.style.display = \"none\";\r\n    });\r\n\r\n    this.saveButton = document.createElement(\"button\");\r\n    this.saveButton.textContent = \"Save\";\r\n    this.domElement.appendChild(this.saveButton);\r\n    this.saveButton.addEventListener(\"click\", () => {\r\n      this.onsave(this.note!);\r\n    });\r\n  }\r\n\r\n  show(note: GridItem, x: number, y: number) {\r\n    console.log(note);\r\n    this.note = note;\r\n    this.domElement.style.display = \"block\";\r\n    this.domElement.style.left = `${x}px`;\r\n    this.domElement.style.top = `${y}px`;\r\n    this.domElement.parentElement?.appendChild(this.domElement);\r\n  }\r\n}\r\n\r\nexport class LyricEditorDialog extends PianoRollDialog {\r\n  textInput: HTMLInputElement;\r\n  audioCanvas: AudioCanvas;\r\n  pitchSlider: HTMLInputElement;\r\n  constructor(onsave: (note: GridItem) => void) {\r\n    super(onsave);\r\n    this.domElement.classList.add(\"piano-roll-note-editor\");\r\n    this.domElement.style.display = \"none\";\r\n\r\n    this.textInput = document.createElement(\"input\");\r\n    this.textInput.setAttribute(\"placeholder\", \"Note lyric\");\r\n    this.textInput.classList.add(\"lyric-editor-text\");\r\n    this.textInput.type = \"text\";\r\n    this.domElement.appendChild(this.textInput);\r\n\r\n    this.pitchSlider = document.createElement(\"input\");\r\n    this.pitchSlider.classList.add(\"lyric-editor-pitch\");\r\n    this.pitchSlider.type = \"range\";\r\n    this.pitchSlider.min = \"-0.5\";\r\n    this.pitchSlider.max = \"0.5\";\r\n    this.pitchSlider.step = \"0.01\";\r\n    this.pitchSlider.addEventListener(\"input\", () => {\r\n      this.note!.pitch = parseFloat(this.pitchSlider.value);\r\n    });\r\n    this.domElement.appendChild(this.pitchSlider);\r\n\r\n    this.audioCanvas = new AudioCanvas();\r\n    this.domElement.appendChild(this.audioCanvas.domElement);\r\n\r\n    this.saveButton.addEventListener(\"click\", () => {\r\n      this.audioCanvas.domElement.style.display = \"block\";\r\n      this.audioCanvas.generateAudio(this.note!, true).then((buffer) => {\r\n        this.note!.audio = buffer;\r\n      });\r\n      this.onsave(this.note!);\r\n    });\r\n  }\r\n\r\n  show(note: GridItem, x: number, y: number) {\r\n    super.show(note, x, y);\r\n    this.textInput.value = this.note?.label || \"\";\r\n    if (this.note?.audio) {\r\n      this.audioCanvas.loadBuffer(this.note.audio);\r\n      this.audioCanvas.domElement.style.display = \"block\";\r\n    } else {\r\n      this.audioCanvas.domElement.style.display = \"none\";\r\n    }\r\n  }\r\n}\r\n","import { DEFAULT_NOTE_HEIGHT, NOTE_NAMES } from \"../constants/audioConstants\";\r\nimport { Composition } from \"./Composition\";\r\nimport { LyricEditorDialog } from \"./audioDialogs\";\r\n\r\nfunction getNoteNameFromPitch(pitch: number): string {\r\n  const note = NOTE_NAMES[pitch % NOTE_NAMES.length];\r\n  return `${note}${Math.floor(pitch / NOTE_NAMES.length)}`;\r\n}\r\n\r\nconst NOTE_HANDLE_WIDTH = 6;\r\n\r\nexport interface IGridItem {\r\n  pitch: number;\r\n  start: number;\r\n  end: number;\r\n  label: string;\r\n}\r\n\r\nexport class GridItem implements IGridItem {\r\n  pitch: number;\r\n  start: number;\r\n  end: number;\r\n  label: string | \"\" = \"\";\r\n  domElement: HTMLDivElement;\r\n  noteLabel: HTMLDivElement;\r\n  lyricLabel: HTMLDivElement;\r\n  audio: AudioBuffer | null = null;\r\n\r\n  constructor(\r\n    private readonly grid: Grid,\r\n    item: IGridItem\r\n  ) {\r\n    this.pitch = item.pitch;\r\n    this.start = item.start;\r\n    this.end = item.end;\r\n    this.domElement = document.createElement(\"div\");\r\n    this.domElement.classList.add(\"piano-roll-note\");\r\n    this.domElement.style.height = `${grid.noteHeight}px`;\r\n\r\n    this.noteLabel = document.createElement(\"div\");\r\n    this.noteLabel.classList.add(\"piano-roll-note-label\");\r\n    this.noteLabel.textContent = getNoteNameFromPitch(this.pitch);\r\n    this.domElement.appendChild(this.noteLabel);\r\n\r\n    this.lyricLabel = document.createElement(\"div\");\r\n    this.lyricLabel.classList.add(\"piano-roll-note-lyric\");\r\n    this.domElement.appendChild(this.lyricLabel);\r\n\r\n    if (item.label) this.lyricLabel.textContent = item.label;\r\n    this.update();\r\n\r\n    grid.domElement.appendChild(this.domElement);\r\n  }\r\n\r\n  update() {\r\n    this.noteLabel.textContent = getNoteNameFromPitch(this.pitch);\r\n    this.lyricLabel.textContent = this.label;\r\n    this.domElement.style.top = `${(87 - this.pitch) * this.grid.noteHeight}px`;\r\n    this.domElement.style.left = `${this.start * this.grid.beatWidth}px`;\r\n    this.domElement.style.width = `${(this.end - this.start) * 100}px`;\r\n  }\r\n}\r\n\r\nexport class Grid {\r\n  domElement: HTMLDivElement;\r\n  gridElement: HTMLDivElement;\r\n  notes: GridItem[] = [];\r\n  currentNote: GridItem | null = null;\r\n  noteHeight = DEFAULT_NOTE_HEIGHT;\r\n  beatWidth = 100;\r\n  noteEditor: LyricEditorDialog;\r\n  dragMode: string | null = null;\r\n\r\n  constructor() {\r\n    this.domElement = document.createElement(\"div\");\r\n    this.domElement.classList.add(\"piano-roll-grid-container\");\r\n\r\n    this.gridElement = document.createElement(\"div\");\r\n    this.gridElement.classList.add(\"piano-roll-grid\");\r\n\r\n    const rowBackgroundCanvas = document.createElement(\"canvas\");\r\n    rowBackgroundCanvas.width = this.beatWidth * 4;\r\n    rowBackgroundCanvas.height = this.noteHeight;\r\n    console.log(\"debug\", rowBackgroundCanvas.width, rowBackgroundCanvas.height);\r\n    const ctx = rowBackgroundCanvas.getContext(\"2d\");\r\n    if (ctx) {\r\n      ctx.strokeStyle = \"#ddd\";\r\n      ctx.lineWidth = 1;\r\n      for (let j = 1; j < 4; j++) {\r\n        ctx.beginPath();\r\n        ctx.moveTo(j * this.beatWidth, 0);\r\n        ctx.lineTo(j * this.beatWidth, this.noteHeight);\r\n        ctx.stroke();\r\n      }\r\n      ctx.lineWidth = 3;\r\n      ctx.strokeStyle = \"#aaa\";\r\n      ctx.beginPath();\r\n      ctx.moveTo(0, 0);\r\n      ctx.lineTo(0, this.noteHeight);\r\n      ctx.stroke();\r\n    }\r\n    for (let i = 0; i < 88; i++) {\r\n      const row = document.createElement(\"div\");\r\n      row.classList.add(\"piano-roll-grid-row\");\r\n      row.style.height = `${this.noteHeight}px`;\r\n      this.gridElement.appendChild(row);\r\n      row.style.backgroundImage = `url(${rowBackgroundCanvas.toDataURL()})`;\r\n      row.style.backgroundRepeat = \"repeat\";\r\n    }\r\n    this.domElement.appendChild(this.gridElement);\r\n\r\n    this.noteEditor = new LyricEditorDialog((note) => {\r\n      const input = this.noteEditor.domElement.querySelector(\r\n        \".lyric-editor-text\"\r\n      ) as HTMLInputElement;\r\n      note.label = input?.value || \"\";\r\n      note.update();\r\n    });\r\n\r\n    document.body.appendChild(this.noteEditor.domElement);\r\n\r\n    this.gridElement.addEventListener(\"pointerdown\", (event) => {\r\n      console.log(event);\r\n      const x = event.layerX;\r\n      event.preventDefault();\r\n      if (this.noteEditor.domElement.style.display === \"block\") {\r\n        this.noteEditor.domElement.style.display = \"none\";\r\n        return;\r\n      }\r\n\r\n      if (\r\n        event.target instanceof HTMLDivElement &&\r\n        event.target.classList.contains(\"piano-roll-note\")\r\n      ) {\r\n        this.gridElement.classList.add(\"dragging\");\r\n        const note = this.notes.find((n) => n.domElement === event.target);\r\n\r\n        if (event.ctrlKey || event.button === 1) {\r\n          if (note)\r\n            this.noteEditor.show(note, event.clientX + 20, event.clientY - 5);\r\n          else this.noteEditor.domElement.style.display = \"none\";\r\n        }\r\n\r\n        if (note) {\r\n          this.currentNote = note;\r\n\r\n          if (event.button === 2) {\r\n            this.remove(note);\r\n            this.currentNote = null;\r\n          } else {\r\n            this.currentNote.domElement.parentElement?.appendChild(\r\n              this.currentNote.domElement\r\n            );\r\n            if (x < NOTE_HANDLE_WIDTH) {\r\n              this.dragMode = \"start\";\r\n            } else if (\r\n              this.currentNote.domElement.offsetWidth - x <\r\n              NOTE_HANDLE_WIDTH\r\n            ) {\r\n              this.dragMode = \"end\";\r\n            } else {\r\n              this.dragMode = \"move\";\r\n            }\r\n            console.log(\r\n              \"drag mode\",\r\n              this.dragMode,\r\n              x,\r\n              this.currentNote.domElement.offsetWidth\r\n            );\r\n          }\r\n        }\r\n      } else if (event.button !== 0) return;\r\n      else if (event.target === this.gridElement) {\r\n        this.gridElement.classList.add(\"dragging\");\r\n        const pitch = 87 - Math.floor(event.layerY / this.noteHeight);\r\n\r\n        this.currentNote = new GridItem(this, {\r\n          pitch: pitch,\r\n          start: event.layerX / this.beatWidth,\r\n          end: (event.layerX + 0.125) / this.beatWidth,\r\n          label: \"\",\r\n        });\r\n        this.add(this.currentNote);\r\n        this.dragMode = \"end\";\r\n      }\r\n    });\r\n\r\n    this.gridElement.addEventListener(\"pointerup\", () => {\r\n      this.gridElement.classList.remove(\"dragging\");\r\n      this.currentNote = null;\r\n    });\r\n\r\n    this.gridElement.addEventListener(\"pointerleave\", () => {\r\n      this.gridElement.classList.remove(\"dragging\");\r\n      if (this.currentNote) {\r\n        this.remove(this.currentNote);\r\n        this.currentNote = null;\r\n      }\r\n    });\r\n\r\n    this.gridElement.addEventListener(\"contextmenu\", (event) => {\r\n      event.preventDefault();\r\n    });\r\n\r\n    this.gridElement.addEventListener(\"pointermove\", (event) => {\r\n      if (this.currentNote && event.buttons === 1) {\r\n        if (this.dragMode === \"start\") {\r\n          this.currentNote.start = event.layerX / this.beatWidth;\r\n          this.currentNote.domElement.style.left = `${\r\n            this.currentNote.start * this.beatWidth\r\n          }px`;\r\n          this.currentNote.domElement.style.width = `${\r\n            (this.currentNote.end - this.currentNote.start) * this.beatWidth\r\n          }px`;\r\n        } else if (this.dragMode === \"end\") {\r\n          this.currentNote.end = event.layerX / this.beatWidth;\r\n          this.currentNote.domElement.style.width = `${\r\n            (this.currentNote.end - this.currentNote.start) * this.beatWidth\r\n          }px`;\r\n        } else if (this.dragMode === \"move\") {\r\n          const delta = event.movementX / this.beatWidth;\r\n          this.currentNote.start += delta;\r\n          this.currentNote.end += delta;\r\n          this.currentNote.domElement.style.left = `${\r\n            this.currentNote.start * this.beatWidth\r\n          }px`;\r\n        }\r\n      }\r\n    });\r\n\r\n    this.gridElement.addEventListener(\"pointerup\", () => {\r\n      this.gridElement.classList.remove(\"dragging\");\r\n      if (this.currentNote) {\r\n        this.currentNote.domElement.style.pointerEvents = \"auto\";\r\n      }\r\n      this.currentNote = null;\r\n    });\r\n\r\n    this.gridElement.addEventListener(\"pointerleave\", () => {\r\n      this.gridElement.classList.remove(\"dragging\");\r\n      if (this.currentNote) {\r\n        this.currentNote.domElement.style.pointerEvents = \"auto\";\r\n      }\r\n      this.currentNote = null;\r\n    });\r\n\r\n    this.update();\r\n  }\r\n\r\n  update() {\r\n    // TODO: update background grid\r\n\r\n    this.notes.forEach((note) => note.update());\r\n  }\r\n\r\n  add(note: GridItem) {\r\n    this.notes.push(note);\r\n    this.gridElement.appendChild(note.domElement);\r\n  }\r\n  remove(note: GridItem) {\r\n    this.notes = this.notes.filter((n) => n !== note);\r\n    this.gridElement.removeChild(note.domElement);\r\n  }\r\n  load(composition: object) {\r\n    const comp = new Composition();\r\n    if (\"title\" in composition) comp.title = composition[\"title\"] as string;\r\n    if (\"description\" in composition)\r\n      comp.description = composition[\"description\"] as string;\r\n    if (\"tempo\" in composition) comp.tempo = composition[\"tempo\"] as number;\r\n    if (\"events\" in composition)\r\n      comp.events = (composition[\"events\"] as IGridItem[]).map(\r\n        (e: IGridItem) => new GridItem(this, e)\r\n      );\r\n  }\r\n  download(): Composition {\r\n    const comp = new Composition();\r\n    comp.events = this.notes;\r\n\r\n    const data = JSON.stringify(comp);\r\n    const blob = new Blob([data], { type: \"application/json\" });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement(\"a\");\r\n    a.href = url;\r\n    a.download = \"composition.json\";\r\n    a.click();\r\n    URL.revokeObjectURL(url);\r\n\r\n    return comp;\r\n  }\r\n}\r\n","import {\r\n  DEFAULT_NOTE_HEIGHT,\r\n  KEY_COLORS,\r\n  NOTE_NAMES,\r\n} from \"../constants/audioConstants\";\r\n\r\nexport class SideKeyboard {\r\n  domElement: HTMLDivElement;\r\n  keys: HTMLDivElement[] = [];\r\n  noteHeight = DEFAULT_NOTE_HEIGHT;\r\n\r\n  constructor() {\r\n    this.domElement = document.createElement(\"div\");\r\n    this.domElement.classList.add(\"piano-roll-keyboard\");\r\n\r\n    this.redraw();\r\n  }\r\n\r\n  redraw() {\r\n    this.domElement.innerHTML = \"\";\r\n\r\n    for (let i = 87; i >= 0; i--) {\r\n      const key = document.createElement(\"div\");\r\n      key.classList.add(\"piano-roll-keyboard-key\");\r\n      key.style.height = `${this.noteHeight}px`;\r\n      // key.style.bottom = `${i * this.noteHeight}px`;\r\n      key.style.backgroundColor =\r\n        KEY_COLORS[i % 12] === \"white\" ? \"#fff\" : \"#000\";\r\n      key.style.color = KEY_COLORS[i % 12] === \"white\" ? \"#000\" : \"#fff\";\r\n      key.textContent = NOTE_NAMES[i % 12] + ((i / 12) | 0).toString();\r\n      this.domElement.appendChild(key);\r\n    }\r\n  }\r\n}\r\n","import { getAudioContext } from \"../managers/AudioManager\";\r\nimport { AudioClock } from \"./AudioClock\";\r\nimport { Grid } from \"./Grid\";\r\nimport { SideKeyboard } from \"./SideKeyboard\";\r\n\r\nexport class PianoRoll {\r\n  domElement: HTMLDivElement;\r\n  grid: Grid;\r\n  sideKeyboard: SideKeyboard;\r\n  cursor: HTMLDivElement;\r\n  cursorUpdateInterval: number | object | null = null;\r\n  scheduledSources: AudioBufferSourceNode[] = [];\r\n\r\n  constructor(private readonly clock: AudioClock) {\r\n    this.domElement = document.createElement(\"div\");\r\n    this.domElement.classList.add(\"piano-roll\");\r\n\r\n    this.sideKeyboard = new SideKeyboard();\r\n    this.domElement.appendChild(this.sideKeyboard.domElement);\r\n\r\n    this.grid = new Grid();\r\n    this.domElement.appendChild(this.grid.domElement);\r\n\r\n    this.cursor = document.createElement(\"div\");\r\n    this.cursor.classList.add(\"piano-roll-cursor\");\r\n    this.grid.domElement.appendChild(this.cursor);\r\n\r\n    clock.on(\"start\", () => {\r\n      if (this.cursorUpdateInterval) {\r\n        clearInterval(this.cursorUpdateInterval as number);\r\n      }\r\n      this.cursor.style.transform = \"translateX(0)\";\r\n      this.cursor.style.display = \"block\";\r\n      this.cursor.parentElement?.appendChild(this.cursor);\r\n      this.scheduleAudioEvents();\r\n    });\r\n\r\n    clock.on(\"render\", () => {\r\n      this.updateCursor();\r\n    });\r\n\r\n    clock.on(\"stop\", () => {\r\n      this.cursor.style.display = \"none\";\r\n      this.scheduledSources.forEach((source) => source.stop());\r\n      this.scheduledSources = [];\r\n    });\r\n  }\r\n\r\n  updateCursor() {\r\n    if (this.clock.isPlaying) {\r\n      this.cursor.style.transform = `translateX(${\r\n        this.clock.currentBeat * this.grid.beatWidth\r\n      }px)`;\r\n    }\r\n  }\r\n\r\n  scheduleAudioEvents() {\r\n    const ctx = getAudioContext();\r\n    this.grid.notes.forEach((note) => {\r\n      const bufferSource = ctx.createBufferSource();\r\n      bufferSource.buffer = note.audio;\r\n      bufferSource.connect(ctx.destination);\r\n      bufferSource.start(ctx.currentTime + (note.start * 60) / this.clock.bpm);\r\n      this.scheduledSources.push(bufferSource);\r\n    });\r\n  }\r\n}\r\n","export interface EventDataMap {\r\n  start: any;\r\n  stop: any;\r\n  pause: any;\r\n  render: any;\r\n}\r\n\r\nexport type BaseEvent = keyof EventDataMap;\r\n\r\nexport default abstract class EventObject<E extends BaseEvent = BaseEvent> {\r\n  private _events: {\r\n    [eventName in E]?: ((e: EventDataMap[eventName]) => void)[];\r\n  } = {};\r\n  private _onceEvents: {\r\n    [eventName in E]?: ((e: EventDataMap[eventName]) => void)[];\r\n  } = {};\r\n\r\n  on(eventName: E, callback: (e: EventDataMap[E]) => void) {\r\n    if (!this._events[eventName]) {\r\n      this._events[eventName] = [];\r\n    }\r\n    this._events[eventName]!.push(callback);\r\n\r\n    return this;\r\n  }\r\n\r\n  once(eventName: E, callback: (e: EventDataMap[E]) => void) {\r\n    if (!this._onceEvents[eventName]) {\r\n      this._onceEvents[eventName] = [];\r\n    }\r\n    this._onceEvents[eventName]!.push(callback);\r\n\r\n    return this;\r\n  }\r\n\r\n  fireEvent(eventName: E, eventData?: EventDataMap[E]) {\r\n    const onceCallbacks = this._onceEvents[eventName];\r\n    if (onceCallbacks) {\r\n      for (const callback of onceCallbacks) {\r\n        try {\r\n          callback(eventData);\r\n        } catch (error) {\r\n          console.error(\r\n            `Error executing .once callback for event: ${eventName}`,\r\n            error\r\n          );\r\n        }\r\n      }\r\n      this._onceEvents[eventName] = undefined;\r\n    }\r\n\r\n    const callbacks = this._events[eventName];\r\n    if (callbacks) {\r\n      for (const callback of callbacks) {\r\n        try {\r\n          callback(eventData);\r\n        } catch (error) {\r\n          console.error(\r\n            `Error executing .on callback for event: ${eventName}`,\r\n            error\r\n          );\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { PianoRoll } from \"../../elements/src/elements/PianoRoll\";\r\nimport { AudioClock } from \"../../elements/src/elements/AudioClock\";\r\n\r\nconst audioClock = new AudioClock();\r\nconst pianoRoll = new PianoRoll(audioClock);\r\n\r\nconst domElement = document.createElement(\"div\");\r\ndomElement.style.width = \"100%\";\r\ndomElement.style.height = \"100%\";\r\ndocument.body.appendChild(domElement);\r\n\r\ndomElement.appendChild(audioClock.domElement);\r\ndomElement.appendChild(pianoRoll.domElement);\r\n","import EventObject from \"../EventObject\";\r\nimport { getAudioContext } from \"../managers/AudioManager\";\r\n\r\nexport class AudioClock extends EventObject<\r\n  \"start\" | \"stop\" | \"pause\" | \"render\"\r\n> {\r\n  domElement: HTMLDivElement;\r\n  bpmInput: HTMLInputElement;\r\n  playPauseButton: HTMLButtonElement;\r\n  stopButton: HTMLButtonElement;\r\n  currentTimeDisplay: HTMLSpanElement;\r\n  private _isPlaying: boolean = false;\r\n  private _bpm: number = 100;\r\n  private intervalId: number | object | null = null;\r\n  private startTime: number | null = null;\r\n\r\n  get currentBeat(): number {\r\n    const elapsedTime =\r\n      this.startTime !== null\r\n        ? getAudioContext().currentTime - this.startTime\r\n        : 0;\r\n    return elapsedTime * (this._bpm / 60);\r\n  }\r\n\r\n  get isPlaying(): boolean {\r\n    return this._isPlaying;\r\n  }\r\n\r\n  get bpm(): number {\r\n    return this._bpm;\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this.domElement = document.createElement(\"div\");\r\n    this.domElement.classList.add(\"audio-clock\");\r\n\r\n    this.bpmInput = document.createElement(\"input\");\r\n    this.bpmInput.classList.add(\"audio-clock-bpm\");\r\n    this.bpmInput.type = \"number\";\r\n    this.bpmInput.value = \"120\";\r\n\r\n    this.bpmInput.addEventListener(\"input\", () => {\r\n      this._bpm = parseFloat(this.bpmInput.value);\r\n    });\r\n    this.domElement.appendChild(this.bpmInput);\r\n    this.playPauseButton = document.createElement(\"button\");\r\n    this.playPauseButton.classList.add(\"audio-clock-play-pause\");\r\n    this.playPauseButton.textContent = \"Play\";\r\n\r\n    this.playPauseButton.addEventListener(\"click\", () => {\r\n      if (this._isPlaying) {\r\n        this.stop();\r\n      } else {\r\n        getAudioContext();\r\n        this.play();\r\n      }\r\n    });\r\n    this.domElement.appendChild(this.playPauseButton);\r\n    this.stopButton = document.createElement(\"button\");\r\n    this.stopButton.classList.add(\"audio-clock-stop\");\r\n    this.stopButton.textContent = \"Stop\";\r\n\r\n    this.stopButton.addEventListener(\"click\", () => {\r\n      this.stop();\r\n    });\r\n    this.domElement.appendChild(this.stopButton);\r\n    this.currentTimeDisplay = document.createElement(\"span\");\r\n    this.currentTimeDisplay.classList.add(\"audio-clock-time\");\r\n    this.currentTimeDisplay.textContent = \"01:01\";\r\n\r\n    this.domElement.appendChild(this.currentTimeDisplay);\r\n  }\r\n\r\n  private start(): void {\r\n    this.fireEvent(\"start\");\r\n    this.startTime = getAudioContext().currentTime;\r\n    console.log(\"Started at\", this.startTime);\r\n    this.intervalId = setInterval(\r\n      () => {\r\n        this.updateCurrentTimeDisplay(this.currentBeat);\r\n      },\r\n      250 // Update every 250ms\r\n    );\r\n    requestAnimationFrame(this.render.bind(this));\r\n  }\r\n\r\n  private render(): void {\r\n    this.fireEvent(\"render\");\r\n    if (this._isPlaying) requestAnimationFrame(this.render.bind(this));\r\n  }\r\n\r\n  private stop(): void {\r\n    this.fireEvent(\"stop\");\r\n    if (this.intervalId) clearInterval(this.intervalId as number);\r\n    this._isPlaying = false;\r\n    this.intervalId = null;\r\n    this.startTime = null;\r\n    this.updateCurrentTimeDisplay(this.currentBeat);\r\n    this.playPauseButton.textContent = \"Play\";\r\n  }\r\n\r\n  private play(): void {\r\n    if (this._isPlaying) {\r\n      this.stop(); // TODO: This should be a pause\r\n    } else {\r\n      this.start();\r\n    }\r\n    this._isPlaying = !this._isPlaying;\r\n    this.playPauseButton.textContent = this._isPlaying ? \"Pause\" : \"Play\";\r\n  }\r\n\r\n  private updateCurrentTimeDisplay(beat: number): void {\r\n    const bars = Math.floor(beat / 4) + 1;\r\n    const beats = Math.floor(beat % 4) + 1;\r\n    const timeString = `${bars.toString().padStart(2, \"0\")}:${beats\r\n      .toString()\r\n      .padStart(2, \"0\")}`;\r\n    this.currentTimeDisplay.textContent = timeString;\r\n  }\r\n}\r\n"],"names":["exports","Symbol","toStringTag","Object","defineProperty","value","audioContext","getAudioContext","window","AudioContext","webkitAudioContext","console","log","buffer","createBuffer","sampleRate","source","createBufferSource","connect","destination","start","KEY_COLORS","NOTE_NAMES","events","this","title","description","tempo","domElement","document","createElement","classList","add","canvas","width","height","appendChild","addEventListener","playBuffer","ctx","getContext","generateAudio","note","preview","Promise","resolve","reject","req","text","label","fetch","method","body","JSON","stringify","headers","then","res","arrayBuffer","data","decodeAudioData","audioBuffer","catch","error","loadBuffer","channelData","getChannelData","bufferLength","length","sliceWidth","clearRect","beginPath","moveTo","i","x","y","lineTo","stroke","onsave","style","display","textInput","setAttribute","type","pitchSlider","min","max","step","pitch","parseFloat","audioCanvas","AudioCanvas","saveButton","audio","show","closeButton","textContent","left","top","parentElement","getNoteNameFromPitch","Math","floor","grid","item","end","noteHeight","noteLabel","lyricLabel","update","beatWidth","notes","currentNote","dragMode","gridElement","rowBackgroundCanvas","strokeStyle","lineWidth","j","row","backgroundImage","toDataURL","backgroundRepeat","noteEditor","LyricEditorDialog","input","querySelector","event","layerX","preventDefault","target","HTMLDivElement","contains","find","n","ctrlKey","button","clientX","clientY","remove","offsetWidth","layerY","GridItem","buttons","delta","movementX","pointerEvents","forEach","push","filter","removeChild","load","composition","comp","Composition","map","e","download","blob","Blob","url","URL","createObjectURL","a","href","click","revokeObjectURL","keys","redraw","innerHTML","key","backgroundColor","color","toString","clock","cursorUpdateInterval","scheduledSources","sideKeyboard","SideKeyboard","Grid","cursor","on","clearInterval","transform","scheduleAudioEvents","updateCursor","stop","isPlaying","currentBeat","bufferSource","currentTime","bpm","_events","_onceEvents","eventName","callback","once","fireEvent","eventData","onceCallbacks","undefined","callbacks","audioClock","_isPlaying","_bpm","intervalId","startTime","bpmInput","playPauseButton","play","stopButton","currentTimeDisplay","setInterval","updateCurrentTimeDisplay","requestAnimationFrame","render","bind","beat","bars","beats","timeString","padStart","pianoRoll","PianoRoll"],"sourceRoot":""}